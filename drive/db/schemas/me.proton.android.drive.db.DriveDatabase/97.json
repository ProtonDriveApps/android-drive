{
  "formatVersion": 1,
  "database": {
    "version": 97,
    "identityHash": "aac5dca942f659a7caf84b5307813415",
    "entities": [
      {
        "tableName": "AccountEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `username` TEXT, `email` TEXT, `state` TEXT NOT NULL, `sessionId` TEXT, `sessionState` TEXT, PRIMARY KEY(`userId`), FOREIGN KEY(`sessionId`) REFERENCES `SessionEntity`(`sessionId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sessionId",
            "columnName": "sessionId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "sessionState",
            "columnName": "sessionState",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "indices": [
          {
            "name": "index_AccountEntity_sessionId",
            "unique": false,
            "columnNames": [
              "sessionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AccountEntity_sessionId` ON `${TABLE_NAME}` (`sessionId`)"
          },
          {
            "name": "index_AccountEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AccountEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "SessionEntity",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "sessionId"
            ],
            "referencedColumns": [
              "sessionId"
            ]
          }
        ]
      },
      {
        "tableName": "AccountMetadataEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `product` TEXT NOT NULL, `primaryAtUtc` INTEGER NOT NULL, `migrations` TEXT, PRIMARY KEY(`userId`, `product`), FOREIGN KEY(`userId`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "product",
            "columnName": "product",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "primaryAtUtc",
            "columnName": "primaryAtUtc",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "migrations",
            "columnName": "migrations",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "product"
          ]
        },
        "indices": [
          {
            "name": "index_AccountMetadataEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AccountMetadataEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_AccountMetadataEntity_product",
            "unique": false,
            "columnNames": [
              "product"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AccountMetadataEntity_product` ON `${TABLE_NAME}` (`product`)"
          },
          {
            "name": "index_AccountMetadataEntity_primaryAtUtc",
            "unique": false,
            "columnNames": [
              "primaryAtUtc"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AccountMetadataEntity_primaryAtUtc` ON `${TABLE_NAME}` (`primaryAtUtc`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "SessionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT, `sessionId` TEXT NOT NULL, `accessToken` TEXT NOT NULL, `refreshToken` TEXT NOT NULL, `scopes` TEXT NOT NULL, `product` TEXT NOT NULL, PRIMARY KEY(`sessionId`), FOREIGN KEY(`userId`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "sessionId",
            "columnName": "sessionId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accessToken",
            "columnName": "accessToken",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "refreshToken",
            "columnName": "refreshToken",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "scopes",
            "columnName": "scopes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "product",
            "columnName": "product",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "sessionId"
          ]
        },
        "indices": [
          {
            "name": "index_SessionEntity_sessionId",
            "unique": false,
            "columnNames": [
              "sessionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SessionEntity_sessionId` ON `${TABLE_NAME}` (`sessionId`)"
          },
          {
            "name": "index_SessionEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SessionEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "SessionDetailsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sessionId` TEXT NOT NULL, `initialEventId` TEXT, `requiredAccountType` TEXT NOT NULL, `secondFactorEnabled` INTEGER NOT NULL, `twoPassModeEnabled` INTEGER NOT NULL, `passphrase` BLOB, `password` TEXT, `fido2AuthenticationOptionsJson` TEXT, PRIMARY KEY(`sessionId`), FOREIGN KEY(`sessionId`) REFERENCES `SessionEntity`(`sessionId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "sessionId",
            "columnName": "sessionId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "initialEventId",
            "columnName": "initialEventId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "requiredAccountType",
            "columnName": "requiredAccountType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "secondFactorEnabled",
            "columnName": "secondFactorEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "twoPassModeEnabled",
            "columnName": "twoPassModeEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "passphrase",
            "columnName": "passphrase",
            "affinity": "BLOB"
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "fido2AuthenticationOptionsJson",
            "columnName": "fido2AuthenticationOptionsJson",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "sessionId"
          ]
        },
        "indices": [
          {
            "name": "index_SessionDetailsEntity_sessionId",
            "unique": false,
            "columnNames": [
              "sessionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SessionDetailsEntity_sessionId` ON `${TABLE_NAME}` (`sessionId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "SessionEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "sessionId"
            ],
            "referencedColumns": [
              "sessionId"
            ]
          }
        ]
      },
      {
        "tableName": "UserEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `email` TEXT, `name` TEXT, `displayName` TEXT, `currency` TEXT NOT NULL, `credit` INTEGER NOT NULL, `createdAtUtc` INTEGER NOT NULL, `usedSpace` INTEGER NOT NULL, `maxSpace` INTEGER NOT NULL, `maxUpload` INTEGER NOT NULL, `type` INTEGER, `role` INTEGER, `private` INTEGER NOT NULL, `subscribed` INTEGER NOT NULL, `services` INTEGER NOT NULL, `delinquent` INTEGER, `passphrase` BLOB, `flags` TEXT, `maxBaseSpace` INTEGER, `maxDriveSpace` INTEGER, `usedBaseSpace` INTEGER, `usedDriveSpace` INTEGER, `recovery_state` INTEGER, `recovery_startTime` INTEGER, `recovery_endTime` INTEGER, `recovery_sessionId` TEXT, `recovery_reason` INTEGER, PRIMARY KEY(`userId`), FOREIGN KEY(`userId`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "credit",
            "columnName": "credit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAtUtc",
            "columnName": "createdAtUtc",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usedSpace",
            "columnName": "usedSpace",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxSpace",
            "columnName": "maxSpace",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxUpload",
            "columnName": "maxUpload",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "isPrivate",
            "columnName": "private",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "subscribed",
            "columnName": "subscribed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "services",
            "columnName": "services",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "delinquent",
            "columnName": "delinquent",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "passphrase",
            "columnName": "passphrase",
            "affinity": "BLOB"
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "maxBaseSpace",
            "columnName": "maxBaseSpace",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "maxDriveSpace",
            "columnName": "maxDriveSpace",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "usedBaseSpace",
            "columnName": "usedBaseSpace",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "usedDriveSpace",
            "columnName": "usedDriveSpace",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "recovery.state",
            "columnName": "recovery_state",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "recovery.startTime",
            "columnName": "recovery_startTime",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "recovery.endTime",
            "columnName": "recovery_endTime",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "recovery.sessionId",
            "columnName": "recovery_sessionId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "recovery.reason",
            "columnName": "recovery_reason",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "indices": [
          {
            "name": "index_UserEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "UserKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `keyId` TEXT NOT NULL, `version` INTEGER NOT NULL, `privateKey` TEXT NOT NULL, `isPrimary` INTEGER NOT NULL, `isUnlockable` INTEGER NOT NULL, `fingerprint` TEXT, `activation` TEXT, `active` INTEGER, `recoverySecretHash` TEXT, `recoverySecretSignature` TEXT, PRIMARY KEY(`keyId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyId",
            "columnName": "keyId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "version",
            "columnName": "version",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "privateKey",
            "columnName": "privateKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isPrimary",
            "columnName": "isPrimary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isUnlockable",
            "columnName": "isUnlockable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fingerprint",
            "columnName": "fingerprint",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "activation",
            "columnName": "activation",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "recoverySecretHash",
            "columnName": "recoverySecretHash",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "recoverySecretSignature",
            "columnName": "recoverySecretSignature",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "keyId"
          ]
        },
        "indices": [
          {
            "name": "index_UserKeyEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserKeyEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_UserKeyEntity_keyId",
            "unique": false,
            "columnNames": [
              "keyId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserKeyEntity_keyId` ON `${TABLE_NAME}` (`keyId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "AddressEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `addressId` TEXT NOT NULL, `email` TEXT NOT NULL, `displayName` TEXT, `signature` TEXT, `domainId` TEXT, `canSend` INTEGER NOT NULL, `canReceive` INTEGER NOT NULL, `enabled` INTEGER NOT NULL, `type` INTEGER, `order` INTEGER NOT NULL, `signedKeyList_data` TEXT, `signedKeyList_signature` TEXT, `signedKeyList_minEpochId` INTEGER, `signedKeyList_maxEpochId` INTEGER, `signedKeyList_expectedMinEpochId` INTEGER, PRIMARY KEY(`addressId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "addressId",
            "columnName": "addressId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "signature",
            "columnName": "signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "domainId",
            "columnName": "domainId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "canSend",
            "columnName": "canSend",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "canReceive",
            "columnName": "canReceive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "enabled",
            "columnName": "enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "signedKeyList.data",
            "columnName": "signedKeyList_data",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "signedKeyList.signature",
            "columnName": "signedKeyList_signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "signedKeyList.minEpochId",
            "columnName": "signedKeyList_minEpochId",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "signedKeyList.maxEpochId",
            "columnName": "signedKeyList_maxEpochId",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "signedKeyList.expectedMinEpochId",
            "columnName": "signedKeyList_expectedMinEpochId",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "addressId"
          ]
        },
        "indices": [
          {
            "name": "index_AddressEntity_addressId",
            "unique": false,
            "columnNames": [
              "addressId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AddressEntity_addressId` ON `${TABLE_NAME}` (`addressId`)"
          },
          {
            "name": "index_AddressEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AddressEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "AddressKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`addressId` TEXT NOT NULL, `keyId` TEXT NOT NULL, `version` INTEGER NOT NULL, `privateKey` TEXT NOT NULL, `isPrimary` INTEGER NOT NULL, `isUnlockable` INTEGER NOT NULL, `flags` INTEGER NOT NULL, `passphrase` BLOB, `token` TEXT, `signature` TEXT, `fingerprint` TEXT, `fingerprints` TEXT, `activation` TEXT, `active` INTEGER NOT NULL, PRIMARY KEY(`keyId`), FOREIGN KEY(`addressId`) REFERENCES `AddressEntity`(`addressId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "addressId",
            "columnName": "addressId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyId",
            "columnName": "keyId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "version",
            "columnName": "version",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "privateKey",
            "columnName": "privateKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isPrimary",
            "columnName": "isPrimary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isUnlockable",
            "columnName": "isUnlockable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "passphrase",
            "columnName": "passphrase",
            "affinity": "BLOB"
          },
          {
            "fieldPath": "token",
            "columnName": "token",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "signature",
            "columnName": "signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "fingerprint",
            "columnName": "fingerprint",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "fingerprints",
            "columnName": "fingerprints",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "activation",
            "columnName": "activation",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "keyId"
          ]
        },
        "indices": [
          {
            "name": "index_AddressKeyEntity_addressId",
            "unique": false,
            "columnNames": [
              "addressId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AddressKeyEntity_addressId` ON `${TABLE_NAME}` (`addressId`)"
          },
          {
            "name": "index_AddressKeyEntity_keyId",
            "unique": false,
            "columnNames": [
              "keyId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AddressKeyEntity_keyId` ON `${TABLE_NAME}` (`keyId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AddressEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "addressId"
            ],
            "referencedColumns": [
              "addressId"
            ]
          }
        ]
      },
      {
        "tableName": "KeySaltEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `keyId` TEXT NOT NULL, `keySalt` TEXT, PRIMARY KEY(`userId`, `keyId`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyId",
            "columnName": "keyId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keySalt",
            "columnName": "keySalt",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "keyId"
          ]
        },
        "indices": [
          {
            "name": "index_KeySaltEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_KeySaltEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_KeySaltEntity_keyId",
            "unique": false,
            "columnNames": [
              "keyId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_KeySaltEntity_keyId` ON `${TABLE_NAME}` (`keyId`)"
          }
        ]
      },
      {
        "tableName": "PublicAddressEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`email` TEXT NOT NULL, `recipientType` INTEGER NOT NULL, `mimeType` TEXT, `ignoreKT` INTEGER, `signedKeyList_data` TEXT, `signedKeyList_signature` TEXT, `signedKeyList_minEpochId` INTEGER, `signedKeyList_maxEpochId` INTEGER, `signedKeyList_expectedMinEpochId` INTEGER, PRIMARY KEY(`email`))",
        "fields": [
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "recipientType",
            "columnName": "recipientType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mimeType",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "ignoreKT",
            "columnName": "ignoreKT",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "signedKeyListEntity.data",
            "columnName": "signedKeyList_data",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "signedKeyListEntity.signature",
            "columnName": "signedKeyList_signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "signedKeyListEntity.minEpochId",
            "columnName": "signedKeyList_minEpochId",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "signedKeyListEntity.maxEpochId",
            "columnName": "signedKeyList_maxEpochId",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "signedKeyListEntity.expectedMinEpochId",
            "columnName": "signedKeyList_expectedMinEpochId",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "email"
          ]
        },
        "indices": [
          {
            "name": "index_PublicAddressEntity_email",
            "unique": false,
            "columnNames": [
              "email"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PublicAddressEntity_email` ON `${TABLE_NAME}` (`email`)"
          }
        ]
      },
      {
        "tableName": "PublicAddressKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`email` TEXT NOT NULL, `flags` INTEGER NOT NULL, `publicKey` TEXT NOT NULL, `isPrimary` INTEGER NOT NULL, PRIMARY KEY(`email`, `publicKey`), FOREIGN KEY(`email`) REFERENCES `PublicAddressEntity`(`email`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "publicKey",
            "columnName": "publicKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isPrimary",
            "columnName": "isPrimary",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "email",
            "publicKey"
          ]
        },
        "indices": [
          {
            "name": "index_PublicAddressKeyEntity_email",
            "unique": false,
            "columnNames": [
              "email"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PublicAddressKeyEntity_email` ON `${TABLE_NAME}` (`email`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "PublicAddressEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "email"
            ],
            "referencedColumns": [
              "email"
            ]
          }
        ]
      },
      {
        "tableName": "HumanVerificationEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clientId` TEXT NOT NULL, `clientIdType` TEXT NOT NULL, `verificationMethods` TEXT NOT NULL, `verificationToken` TEXT, `state` TEXT NOT NULL, `humanHeaderTokenType` TEXT, `humanHeaderTokenCode` TEXT, PRIMARY KEY(`clientId`))",
        "fields": [
          {
            "fieldPath": "clientId",
            "columnName": "clientId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "clientIdType",
            "columnName": "clientIdType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "verificationMethods",
            "columnName": "verificationMethods",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "verificationToken",
            "columnName": "verificationToken",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "humanHeaderTokenType",
            "columnName": "humanHeaderTokenType",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "humanHeaderTokenCode",
            "columnName": "humanHeaderTokenCode",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "clientId"
          ]
        }
      },
      {
        "tableName": "UserSettingsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `news` INTEGER, `locale` TEXT, `logAuth` INTEGER, `density` INTEGER, `weekStart` INTEGER, `dateFormat` INTEGER, `timeFormat` INTEGER, `earlyAccess` INTEGER, `deviceRecovery` INTEGER, `telemetry` INTEGER, `crashReports` INTEGER, `sessionAccountRecovery` INTEGER, `easyDeviceMigrationOptOut` INTEGER, `email_value` TEXT, `email_status` INTEGER, `email_notify` INTEGER, `email_reset` INTEGER, `phone_value` TEXT, `phone_status` INTEGER, `phone_notify` INTEGER, `phone_reset` INTEGER, `password_mode` INTEGER, `password_expirationTime` INTEGER, `twoFA_enabled` INTEGER, `twoFA_allowed` INTEGER, `twoFA_expirationTime` INTEGER, `twoFA_registeredKeys` TEXT, PRIMARY KEY(`userId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "news",
            "columnName": "news",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "locale",
            "columnName": "locale",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "logAuth",
            "columnName": "logAuth",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "density",
            "columnName": "density",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "weekStart",
            "columnName": "weekStart",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "dateFormat",
            "columnName": "dateFormat",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "timeFormat",
            "columnName": "timeFormat",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "earlyAccess",
            "columnName": "earlyAccess",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "deviceRecovery",
            "columnName": "deviceRecovery",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "telemetry",
            "columnName": "telemetry",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "crashReports",
            "columnName": "crashReports",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "sessionAccountRecovery",
            "columnName": "sessionAccountRecovery",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "easyDeviceMigrationOptOut",
            "columnName": "easyDeviceMigrationOptOut",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "email.value",
            "columnName": "email_value",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "email.status",
            "columnName": "email_status",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "email.notify",
            "columnName": "email_notify",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "email.reset",
            "columnName": "email_reset",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "phone.value",
            "columnName": "phone_value",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "phone.status",
            "columnName": "phone_status",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "phone.notify",
            "columnName": "phone_notify",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "phone.reset",
            "columnName": "phone_reset",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "password.mode",
            "columnName": "password_mode",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "password.expirationTime",
            "columnName": "password_expirationTime",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "twoFA.enabled",
            "columnName": "twoFA_enabled",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "twoFA.allowed",
            "columnName": "twoFA_allowed",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "twoFA.expirationTime",
            "columnName": "twoFA_expirationTime",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "twoFA.registeredKeys",
            "columnName": "twoFA_registeredKeys",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "EntitlementEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `key` TEXT NOT NULL, `value` TEXT NOT NULL, PRIMARY KEY(`user_id`, `key`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "key"
          ]
        },
        "indices": [
          {
            "name": "index_EntitlementEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EntitlementEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "OrganizationEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `name` TEXT NOT NULL, `displayName` TEXT, `planName` TEXT, `twoFactorGracePeriod` INTEGER, `theme` TEXT, `email` TEXT, `maxDomains` INTEGER, `maxAddresses` INTEGER, `maxSpace` INTEGER, `maxMembers` INTEGER, `maxVPN` INTEGER, `maxCalendars` INTEGER, `features` INTEGER, `flags` INTEGER, `usedDomains` INTEGER, `usedAddresses` INTEGER, `usedSpace` INTEGER, `assignedSpace` INTEGER, `usedMembers` INTEGER, `usedVPN` INTEGER, `usedCalendars` INTEGER, `hasKeys` INTEGER, `toMigrate` INTEGER, PRIMARY KEY(`userId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "planName",
            "columnName": "planName",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "twoFactorGracePeriod",
            "columnName": "twoFactorGracePeriod",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "theme",
            "columnName": "theme",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "maxDomains",
            "columnName": "maxDomains",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "maxAddresses",
            "columnName": "maxAddresses",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "maxSpace",
            "columnName": "maxSpace",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "maxMembers",
            "columnName": "maxMembers",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "maxVPN",
            "columnName": "maxVPN",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "maxCalendars",
            "columnName": "maxCalendars",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "features",
            "columnName": "features",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "usedDomains",
            "columnName": "usedDomains",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "usedAddresses",
            "columnName": "usedAddresses",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "usedSpace",
            "columnName": "usedSpace",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "assignedSpace",
            "columnName": "assignedSpace",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "usedMembers",
            "columnName": "usedMembers",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "usedVPN",
            "columnName": "usedVPN",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "usedCalendars",
            "columnName": "usedCalendars",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "hasKeys",
            "columnName": "hasKeys",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "toMigrate",
            "columnName": "toMigrate",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "OrganizationKeysEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `publicKey` TEXT NOT NULL, `privateKey` TEXT NOT NULL, PRIMARY KEY(`userId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publicKey",
            "columnName": "publicKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "privateKey",
            "columnName": "privateKey",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "EventMetadataEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `config` TEXT NOT NULL, `eventId` TEXT, `nextEventId` TEXT, `refresh` TEXT, `more` INTEGER, `retry` INTEGER NOT NULL, `state` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER, `fetchedAt` INTEGER, PRIMARY KEY(`userId`, `config`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "config",
            "columnName": "config",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "nextEventId",
            "columnName": "nextEventId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "refresh",
            "columnName": "refresh",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "more",
            "columnName": "more",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "retry",
            "columnName": "retry",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "fetchedAt",
            "columnName": "fetchedAt",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "config"
          ]
        },
        "indices": [
          {
            "name": "index_EventMetadataEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EventMetadataEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_EventMetadataEntity_config",
            "unique": false,
            "columnNames": [
              "config"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EventMetadataEntity_config` ON `${TABLE_NAME}` (`config`)"
          },
          {
            "name": "index_EventMetadataEntity_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EventMetadataEntity_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "FeatureFlagEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `featureId` TEXT NOT NULL, `scope` TEXT NOT NULL, `defaultValue` INTEGER NOT NULL, `value` INTEGER NOT NULL, `variantName` TEXT, `payloadType` TEXT, `payloadValue` TEXT, PRIMARY KEY(`userId`, `featureId`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "featureId",
            "columnName": "featureId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "scope",
            "columnName": "scope",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "defaultValue",
            "columnName": "defaultValue",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "variantName",
            "columnName": "variantName",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "payloadType",
            "columnName": "payloadType",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "payloadValue",
            "columnName": "payloadValue",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "featureId"
          ]
        },
        "indices": [
          {
            "name": "index_FeatureFlagEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_FeatureFlagEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_FeatureFlagEntity_featureId",
            "unique": false,
            "columnNames": [
              "featureId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_FeatureFlagEntity_featureId` ON `${TABLE_NAME}` (`featureId`)"
          }
        ]
      },
      {
        "tableName": "ChallengeFrameEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`challengeFrame` TEXT NOT NULL, `flow` TEXT NOT NULL, `focusTime` TEXT NOT NULL, `clicks` INTEGER NOT NULL, `copy` TEXT NOT NULL, `paste` TEXT NOT NULL, `keys` TEXT NOT NULL, PRIMARY KEY(`challengeFrame`))",
        "fields": [
          {
            "fieldPath": "challengeFrame",
            "columnName": "challengeFrame",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "flow",
            "columnName": "flow",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "focusTime",
            "columnName": "focusTime",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "clicks",
            "columnName": "clicks",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "copy",
            "columnName": "copy",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paste",
            "columnName": "paste",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keys",
            "columnName": "keys",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "challengeFrame"
          ]
        }
      },
      {
        "tableName": "PurchaseEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sessionId` TEXT NOT NULL, `planName` TEXT NOT NULL, `planCycle` INTEGER NOT NULL, `purchaseState` TEXT NOT NULL, `purchaseFailure` TEXT, `paymentProvider` TEXT NOT NULL, `paymentOrderId` TEXT, `paymentToken` TEXT, `paymentCurrency` TEXT NOT NULL, `paymentAmount` INTEGER NOT NULL, PRIMARY KEY(`planName`), FOREIGN KEY(`sessionId`) REFERENCES `SessionEntity`(`sessionId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "sessionId",
            "columnName": "sessionId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "planName",
            "columnName": "planName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "planCycle",
            "columnName": "planCycle",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "purchaseState",
            "columnName": "purchaseState",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "purchaseFailure",
            "columnName": "purchaseFailure",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "paymentProvider",
            "columnName": "paymentProvider",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentOrderId",
            "columnName": "paymentOrderId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "paymentToken",
            "columnName": "paymentToken",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "paymentCurrency",
            "columnName": "paymentCurrency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentAmount",
            "columnName": "paymentAmount",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "planName"
          ]
        },
        "indices": [
          {
            "name": "index_PurchaseEntity_planName",
            "unique": false,
            "columnNames": [
              "planName"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PurchaseEntity_planName` ON `${TABLE_NAME}` (`planName`)"
          },
          {
            "name": "index_PurchaseEntity_sessionId",
            "unique": false,
            "columnNames": [
              "sessionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PurchaseEntity_sessionId` ON `${TABLE_NAME}` (`sessionId`)"
          },
          {
            "name": "index_PurchaseEntity_purchaseState",
            "unique": false,
            "columnNames": [
              "purchaseState"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PurchaseEntity_purchaseState` ON `${TABLE_NAME}` (`purchaseState`)"
          },
          {
            "name": "index_PurchaseEntity_paymentProvider",
            "unique": false,
            "columnNames": [
              "paymentProvider"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PurchaseEntity_paymentProvider` ON `${TABLE_NAME}` (`paymentProvider`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "SessionEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "sessionId"
            ],
            "referencedColumns": [
              "sessionId"
            ]
          }
        ]
      },
      {
        "tableName": "GooglePurchaseEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`googlePurchaseToken` TEXT NOT NULL, `paymentToken` TEXT NOT NULL, PRIMARY KEY(`googlePurchaseToken`))",
        "fields": [
          {
            "fieldPath": "googlePurchaseToken",
            "columnName": "googlePurchaseToken",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentToken",
            "columnName": "paymentToken",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "googlePurchaseToken"
          ]
        },
        "indices": [
          {
            "name": "index_GooglePurchaseEntity_paymentToken",
            "unique": true,
            "columnNames": [
              "paymentToken"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_GooglePurchaseEntity_paymentToken` ON `${TABLE_NAME}` (`paymentToken`)"
          }
        ]
      },
      {
        "tableName": "ObservabilityEventEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `version` INTEGER NOT NULL, `timestamp` INTEGER NOT NULL, `data` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "version",
            "columnName": "version",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "data",
            "columnName": "data",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "AddressChangeEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `changeId` TEXT NOT NULL, `counterEncrypted` TEXT NOT NULL, `emailEncrypted` TEXT NOT NULL, `epochIdEncrypted` TEXT NOT NULL, `creationTimestampEncrypted` TEXT NOT NULL, `publicKeysEncrypted` TEXT NOT NULL, `isObsolete` TEXT NOT NULL, PRIMARY KEY(`userId`, `changeId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "changeId",
            "columnName": "changeId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "counterEncrypted",
            "columnName": "counterEncrypted",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "emailEncrypted",
            "columnName": "emailEncrypted",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "epochIdEncrypted",
            "columnName": "epochIdEncrypted",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "creationTimestampEncrypted",
            "columnName": "creationTimestampEncrypted",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publicKeysEncrypted",
            "columnName": "publicKeysEncrypted",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isObsolete",
            "columnName": "isObsolete",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "changeId"
          ]
        },
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "SelfAuditResultEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, PRIMARY KEY(`userId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "NotificationEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`notificationId` TEXT NOT NULL, `userId` TEXT NOT NULL, `time` INTEGER NOT NULL, `type` TEXT NOT NULL, `payload` TEXT NOT NULL, PRIMARY KEY(`userId`, `notificationId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "notificationId",
            "columnName": "notificationId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "payload",
            "columnName": "payload",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "notificationId"
          ]
        },
        "indices": [
          {
            "name": "index_NotificationEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_NotificationEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_NotificationEntity_notificationId",
            "unique": false,
            "columnNames": [
              "notificationId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_NotificationEntity_notificationId` ON `${TABLE_NAME}` (`notificationId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "PushEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `pushId` TEXT NOT NULL, `objectId` TEXT NOT NULL, `type` TEXT NOT NULL, PRIMARY KEY(`userId`, `pushId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pushId",
            "columnName": "pushId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "objectId",
            "columnName": "objectId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "pushId"
          ]
        },
        "indices": [
          {
            "name": "index_PushEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PushEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_PushEntity_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PushEntity_type` ON `${TABLE_NAME}` (`type`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "TelemetryEventEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` TEXT, `group` TEXT NOT NULL, `name` TEXT NOT NULL, `values` TEXT NOT NULL, `dimensions` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "group",
            "columnName": "group",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "values",
            "columnName": "values",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dimensions",
            "columnName": "dimensions",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_TelemetryEventEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TelemetryEventEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "ContactCardEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contactId` TEXT NOT NULL, `type` INTEGER NOT NULL, `data` TEXT NOT NULL, `signature` TEXT, `cardId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`contactId`) REFERENCES `ContactEntity`(`contactId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "contactId",
            "columnName": "contactId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "data",
            "columnName": "data",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "signature",
            "columnName": "signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "cardId",
            "columnName": "cardId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cardId"
          ]
        },
        "indices": [
          {
            "name": "index_ContactCardEntity_contactId",
            "unique": false,
            "columnNames": [
              "contactId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContactCardEntity_contactId` ON `${TABLE_NAME}` (`contactId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "ContactEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "contactId"
            ],
            "referencedColumns": [
              "contactId"
            ]
          }
        ]
      },
      {
        "tableName": "ContactEmailEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `contactEmailId` TEXT NOT NULL, `name` TEXT NOT NULL, `email` TEXT NOT NULL, `defaults` INTEGER NOT NULL, `order` INTEGER NOT NULL, `contactId` TEXT NOT NULL, `canonicalEmail` TEXT, `isProton` INTEGER, `lastUsedTime` INTEGER NOT NULL, PRIMARY KEY(`contactEmailId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`contactId`) REFERENCES `ContactEntity`(`contactId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contactEmailId",
            "columnName": "contactEmailId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "defaults",
            "columnName": "defaults",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contactId",
            "columnName": "contactId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "canonicalEmail",
            "columnName": "canonicalEmail",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "isProton",
            "columnName": "isProton",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "lastUsedTime",
            "columnName": "lastUsedTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "contactEmailId"
          ]
        },
        "indices": [
          {
            "name": "index_ContactEmailEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContactEmailEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_ContactEmailEntity_contactId",
            "unique": false,
            "columnNames": [
              "contactId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContactEmailEntity_contactId` ON `${TABLE_NAME}` (`contactId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ContactEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "contactId"
            ],
            "referencedColumns": [
              "contactId"
            ]
          }
        ]
      },
      {
        "tableName": "ContactEmailLabelEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contactEmailId` TEXT NOT NULL, `labelId` TEXT NOT NULL, PRIMARY KEY(`contactEmailId`, `labelId`), FOREIGN KEY(`contactEmailId`) REFERENCES `ContactEmailEntity`(`contactEmailId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "contactEmailId",
            "columnName": "contactEmailId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "labelId",
            "columnName": "labelId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "contactEmailId",
            "labelId"
          ]
        },
        "foreignKeys": [
          {
            "table": "ContactEmailEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "contactEmailId"
            ],
            "referencedColumns": [
              "contactEmailId"
            ]
          }
        ]
      },
      {
        "tableName": "ContactEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `contactId` TEXT NOT NULL, `name` TEXT NOT NULL, PRIMARY KEY(`contactId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contactId",
            "columnName": "contactId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "contactId"
          ]
        },
        "indices": [
          {
            "name": "index_ContactEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContactEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "RecoveryFileEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `createdAtUtcMillis` INTEGER NOT NULL, `keyCount` INTEGER, `recoveryFile` TEXT NOT NULL, `recoverySecretHash` TEXT NOT NULL, PRIMARY KEY(`recoverySecretHash`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAtUtcMillis",
            "columnName": "createdAtUtcMillis",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "keyCount",
            "columnName": "keyCount",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "recoveryFile",
            "columnName": "recoveryFile",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "recoverySecretHash",
            "columnName": "recoverySecretHash",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "recoverySecretHash"
          ]
        },
        "indices": [
          {
            "name": "index_RecoveryFileEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_RecoveryFileEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "PublicAddressInfoEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`email` TEXT NOT NULL, `warnings` TEXT NOT NULL, `protonMx` INTEGER NOT NULL, `isProton` INTEGER NOT NULL, `addressSignedKeyList_data` TEXT, `addressSignedKeyList_signature` TEXT, `addressSignedKeyList_minEpochId` INTEGER, `addressSignedKeyList_maxEpochId` INTEGER, `addressSignedKeyList_expectedMinEpochId` INTEGER, `catchAllSignedKeyList_data` TEXT, `catchAllSignedKeyList_signature` TEXT, `catchAllSignedKeyList_minEpochId` INTEGER, `catchAllSignedKeyList_maxEpochId` INTEGER, `catchAllSignedKeyList_expectedMinEpochId` INTEGER, PRIMARY KEY(`email`))",
        "fields": [
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "warnings",
            "columnName": "warnings",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "protonMx",
            "columnName": "protonMx",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isProton",
            "columnName": "isProton",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "addressSignedKeyList.data",
            "columnName": "addressSignedKeyList_data",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "addressSignedKeyList.signature",
            "columnName": "addressSignedKeyList_signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "addressSignedKeyList.minEpochId",
            "columnName": "addressSignedKeyList_minEpochId",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "addressSignedKeyList.maxEpochId",
            "columnName": "addressSignedKeyList_maxEpochId",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "addressSignedKeyList.expectedMinEpochId",
            "columnName": "addressSignedKeyList_expectedMinEpochId",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "catchAllSignedKeyList.data",
            "columnName": "catchAllSignedKeyList_data",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "catchAllSignedKeyList.signature",
            "columnName": "catchAllSignedKeyList_signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "catchAllSignedKeyList.minEpochId",
            "columnName": "catchAllSignedKeyList_minEpochId",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "catchAllSignedKeyList.maxEpochId",
            "columnName": "catchAllSignedKeyList_maxEpochId",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "catchAllSignedKeyList.expectedMinEpochId",
            "columnName": "catchAllSignedKeyList_expectedMinEpochId",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "email"
          ]
        },
        "indices": [
          {
            "name": "index_PublicAddressInfoEntity_email",
            "unique": false,
            "columnNames": [
              "email"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PublicAddressInfoEntity_email` ON `${TABLE_NAME}` (`email`)"
          }
        ]
      },
      {
        "tableName": "PublicAddressKeyDataEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`email` TEXT NOT NULL, `emailAddressType` INTEGER NOT NULL, `flags` INTEGER NOT NULL, `publicKey` TEXT NOT NULL, `isPrimary` INTEGER NOT NULL, `source` INTEGER, PRIMARY KEY(`email`, `publicKey`), FOREIGN KEY(`email`) REFERENCES `PublicAddressInfoEntity`(`email`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "emailAddressType",
            "columnName": "emailAddressType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "publicKey",
            "columnName": "publicKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isPrimary",
            "columnName": "isPrimary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "source",
            "columnName": "source",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "email",
            "publicKey"
          ]
        },
        "indices": [
          {
            "name": "index_PublicAddressKeyDataEntity_email",
            "unique": false,
            "columnNames": [
              "email"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PublicAddressKeyDataEntity_email` ON `${TABLE_NAME}` (`email`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "PublicAddressInfoEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "email"
            ],
            "referencedColumns": [
              "email"
            ]
          }
        ]
      },
      {
        "tableName": "LabelEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `labelId` TEXT NOT NULL, `parentId` TEXT, `name` TEXT NOT NULL, `type` INTEGER NOT NULL, `path` TEXT NOT NULL, `color` TEXT NOT NULL, `order` INTEGER NOT NULL, `isNotified` INTEGER, `isExpanded` INTEGER, `isSticky` INTEGER, PRIMARY KEY(`userId`, `labelId`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "labelId",
            "columnName": "labelId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "path",
            "columnName": "path",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isNotified",
            "columnName": "isNotified",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "isExpanded",
            "columnName": "isExpanded",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "isSticky",
            "columnName": "isSticky",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "labelId"
          ]
        },
        "indices": [
          {
            "name": "index_LabelEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LabelEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_LabelEntity_labelId",
            "unique": false,
            "columnNames": [
              "labelId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LabelEntity_labelId` ON `${TABLE_NAME}` (`labelId`)"
          },
          {
            "name": "index_LabelEntity_parentId",
            "unique": false,
            "columnNames": [
              "parentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LabelEntity_parentId` ON `${TABLE_NAME}` (`parentId`)"
          },
          {
            "name": "index_LabelEntity_name",
            "unique": false,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LabelEntity_name` ON `${TABLE_NAME}` (`name`)"
          },
          {
            "name": "index_LabelEntity_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LabelEntity_type` ON `${TABLE_NAME}` (`type`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "AuthDeviceEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `deviceId` TEXT NOT NULL, `addressId` TEXT, `state` INTEGER NOT NULL, `name` TEXT NOT NULL, `localizedClientName` TEXT NOT NULL, `platform` TEXT, `createdAtUtcSeconds` INTEGER NOT NULL, `activatedAtUtcSeconds` INTEGER, `rejectedAtUtcSeconds` INTEGER, `activationToken` TEXT, `lastActivityAtUtcSeconds` INTEGER NOT NULL, PRIMARY KEY(`userId`, `deviceId`), FOREIGN KEY(`userId`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "deviceId",
            "columnName": "deviceId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "addressId",
            "columnName": "addressId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "localizedClientName",
            "columnName": "localizedClientName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "platform",
            "columnName": "platform",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "createdAtUtcSeconds",
            "columnName": "createdAtUtcSeconds",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "activatedAtUtcSeconds",
            "columnName": "activatedAtUtcSeconds",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "rejectedAtUtcSeconds",
            "columnName": "rejectedAtUtcSeconds",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "activationToken",
            "columnName": "activationToken",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "lastActivityAtUtcSeconds",
            "columnName": "lastActivityAtUtcSeconds",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "deviceId"
          ]
        },
        "indices": [
          {
            "name": "index_AuthDeviceEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AuthDeviceEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_AuthDeviceEntity_addressId",
            "unique": false,
            "columnNames": [
              "addressId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AuthDeviceEntity_addressId` ON `${TABLE_NAME}` (`addressId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "DeviceSecretEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `deviceId` TEXT NOT NULL, `secret` TEXT NOT NULL, `token` TEXT NOT NULL, PRIMARY KEY(`userId`), FOREIGN KEY(`userId`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "deviceId",
            "columnName": "deviceId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "secret",
            "columnName": "secret",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "token",
            "columnName": "token",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "indices": [
          {
            "name": "index_DeviceSecretEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DeviceSecretEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "MemberDeviceEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `deviceId` TEXT NOT NULL, `memberId` TEXT NOT NULL, `addressId` TEXT, `state` INTEGER NOT NULL, `name` TEXT NOT NULL, `localizedClientName` TEXT NOT NULL, `platform` TEXT, `createdAtUtcSeconds` INTEGER NOT NULL, `activatedAtUtcSeconds` INTEGER, `rejectedAtUtcSeconds` INTEGER, `activationToken` TEXT, `lastActivityAtUtcSeconds` INTEGER NOT NULL, PRIMARY KEY(`userId`, `deviceId`), FOREIGN KEY(`userId`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "deviceId",
            "columnName": "deviceId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "memberId",
            "columnName": "memberId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "addressId",
            "columnName": "addressId",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "localizedClientName",
            "columnName": "localizedClientName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "platform",
            "columnName": "platform",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "createdAtUtcSeconds",
            "columnName": "createdAtUtcSeconds",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "activatedAtUtcSeconds",
            "columnName": "activatedAtUtcSeconds",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "rejectedAtUtcSeconds",
            "columnName": "rejectedAtUtcSeconds",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "activationToken",
            "columnName": "activationToken",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "lastActivityAtUtcSeconds",
            "columnName": "lastActivityAtUtcSeconds",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "deviceId"
          ]
        },
        "indices": [
          {
            "name": "index_MemberDeviceEntity_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MemberDeviceEntity_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_MemberDeviceEntity_memberId",
            "unique": false,
            "columnNames": [
              "memberId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MemberDeviceEntity_memberId` ON `${TABLE_NAME}` (`memberId`)"
          },
          {
            "name": "index_MemberDeviceEntity_addressId",
            "unique": false,
            "columnNames": [
              "addressId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MemberDeviceEntity_addressId` ON `${TABLE_NAME}` (`addressId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "VolumeEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `create_time` INTEGER NOT NULL, `used_space` INTEGER NOT NULL, `state` INTEGER NOT NULL, `type` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createTime",
            "columnName": "create_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usedSpace",
            "columnName": "used_space",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_VolumeEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_VolumeEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_VolumeEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_VolumeEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_VolumeEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_VolumeEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_VolumeEntity_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_VolumeEntity_type` ON `${TABLE_NAME}` (`type`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "ShareEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `address_id` TEXT, `flags` INTEGER NOT NULL, `link_id` TEXT NOT NULL, `locked` INTEGER NOT NULL, `key` TEXT NOT NULL, `passphrase` TEXT NOT NULL, `passphrase_signature` TEXT NOT NULL, `creation_time` INTEGER, `type` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "addressId",
            "columnName": "address_id",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isLocked",
            "columnName": "locked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "passphrase",
            "columnName": "passphrase",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "passphraseSignature",
            "columnName": "passphrase_signature",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "creationTime",
            "columnName": "creation_time",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ShareEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_ShareEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_ShareEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_ShareEntity_id",
            "unique": true,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ShareEntity_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "ShareUrlEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `flags` INTEGER NOT NULL, `name` TEXT, `token` TEXT NOT NULL, `creator_email` TEXT NOT NULL, `permissions` INTEGER NOT NULL, `creation_time` INTEGER NOT NULL, `expiration_time` INTEGER, `last_access_time` INTEGER, `max_accesses` INTEGER, `number_of_accesses` INTEGER NOT NULL, `url_password_salt` TEXT NOT NULL, `share_password_salt` TEXT NOT NULL, `srp_verifier` TEXT NOT NULL, `srp_modulus_id` TEXT NOT NULL, `password` TEXT NOT NULL, `share_passphrase_key_packet` TEXT NOT NULL, `public_url` TEXT NOT NULL DEFAULT '', PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `id`), FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "token",
            "columnName": "token",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "creatorEmail",
            "columnName": "creator_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "creationTime",
            "columnName": "creation_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expirationTime",
            "columnName": "expiration_time",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "lastAccessTime",
            "columnName": "last_access_time",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "maxAccesses",
            "columnName": "max_accesses",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "numberOfAccesses",
            "columnName": "number_of_accesses",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "urlPasswordSalt",
            "columnName": "url_password_salt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sharePasswordSalt",
            "columnName": "share_password_salt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "srpVerifier",
            "columnName": "srp_verifier",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "srpModulusId",
            "columnName": "srp_modulus_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "encryptedUrlPassword",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sharePassphraseKeyPacket",
            "columnName": "share_passphrase_key_packet",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publicUrl",
            "columnName": "public_url",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "''"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ShareUrlEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareUrlEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_ShareUrlEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareUrlEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_ShareUrlEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareUrlEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_ShareUrlEntity_user_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareUrlEntity_user_id_share_id` ON `${TABLE_NAME}` (`user_id`, `share_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ShareExternalInvitationEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `inviter_email` TEXT NOT NULL, `invitee_email` TEXT NOT NULL, `permissions` INTEGER NOT NULL, `signature` TEXT NOT NULL, `state` INTEGER NOT NULL, `create_time` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inviterEmail",
            "columnName": "inviter_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inviteeEmail",
            "columnName": "invitee_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "signature",
            "columnName": "signature",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createTime",
            "columnName": "create_time",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ShareExternalInvitationEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareExternalInvitationEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_ShareExternalInvitationEntity_user_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareExternalInvitationEntity_user_id_share_id` ON `${TABLE_NAME}` (`user_id`, `share_id`)"
          },
          {
            "name": "index_ShareExternalInvitationEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareExternalInvitationEntity_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ShareInvitationEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `inviter_email` TEXT NOT NULL, `invitee_email` TEXT NOT NULL, `permissions` INTEGER NOT NULL, `key_packet` TEXT NOT NULL, `key_packet_signature` TEXT NOT NULL, `create_time` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inviterEmail",
            "columnName": "inviter_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inviteeEmail",
            "columnName": "invitee_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "keyPacket",
            "columnName": "key_packet",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyPacketSignature",
            "columnName": "key_packet_signature",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createTime",
            "columnName": "create_time",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ShareInvitationEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareInvitationEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_ShareInvitationEntity_user_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareInvitationEntity_user_id_share_id` ON `${TABLE_NAME}` (`user_id`, `share_id`)"
          },
          {
            "name": "index_ShareInvitationEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareInvitationEntity_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ShareMemberEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `inviter_email` TEXT NOT NULL, `invitee_email` TEXT NOT NULL, `permissions` INTEGER NOT NULL, `key_packet` TEXT NOT NULL, `key_packet_signature` TEXT, `session_key_signature` TEXT, `create_time` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inviterEmail",
            "columnName": "inviter_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inviteeEmail",
            "columnName": "invitee_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "keyPacket",
            "columnName": "key_packet",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyPacketSignature",
            "columnName": "key_packet_signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "sessionKeySignature",
            "columnName": "session_key_signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "createTime",
            "columnName": "create_time",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ShareMemberEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareMemberEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_ShareMemberEntity_user_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareMemberEntity_user_id_share_id` ON `${TABLE_NAME}` (`user_id`, `share_id`)"
          },
          {
            "name": "index_ShareMemberEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareMemberEntity_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ShareMembershipEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `inviter_email` TEXT NOT NULL, `invitee_email` TEXT NOT NULL, `address_id` TEXT NOT NULL, `permissions` INTEGER NOT NULL, `key_packet` TEXT NOT NULL, `key_packet_signature` TEXT, `session_key_signature` TEXT, `create_time` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inviterEmail",
            "columnName": "inviter_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inviteeEmail",
            "columnName": "invitee_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "addressId",
            "columnName": "address_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "keyPacket",
            "columnName": "key_packet",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyPacketSignature",
            "columnName": "key_packet_signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "sessionKeySignature",
            "columnName": "session_key_signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "createTime",
            "columnName": "create_time",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ShareMembershipEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareMembershipEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_ShareMembershipEntity_user_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareMembershipEntity_user_id_share_id` ON `${TABLE_NAME}` (`user_id`, `share_id`)"
          },
          {
            "name": "index_ShareMembershipEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ShareMembershipEntity_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "UserInvitationDetailsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `id` TEXT NOT NULL, `inviter_email` TEXT NOT NULL, `invitee_email` TEXT NOT NULL, `permissions` INTEGER NOT NULL, `key_packet` TEXT NOT NULL, `key_packet_signature` TEXT NOT NULL, `create_time` INTEGER NOT NULL, `passphrase` TEXT NOT NULL, `share_key` TEXT NOT NULL, `creator_email` TEXT NOT NULL, `type` INTEGER NOT NULL, `link_id` TEXT NOT NULL, `name` TEXT NOT NULL, `mime_type` TEXT, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `volume_id`, `share_id`, `id`) REFERENCES `UserInvitationIdEntity`(`user_id`, `volume_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inviterEmail",
            "columnName": "inviter_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inviteeEmail",
            "columnName": "invitee_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "keyPacket",
            "columnName": "key_packet",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyPacketSignature",
            "columnName": "key_packet_signature",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createTime",
            "columnName": "create_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "passphrase",
            "columnName": "passphrase",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareKey",
            "columnName": "share_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "creatorEmail",
            "columnName": "creator_email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mime_type",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_UserInvitationDetailsEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserInvitationDetailsEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "UserInvitationIdEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "volume_id",
              "share_id",
              "id"
            ],
            "referencedColumns": [
              "user_id",
              "volume_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "UserInvitationIdEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `type` INTEGER, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_UserInvitationIdEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserInvitationIdEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "LinkEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `parent_id` TEXT, `type` INTEGER NOT NULL, `name` TEXT NOT NULL, `name_signature_email` TEXT, `hash` TEXT NOT NULL, `state` INTEGER NOT NULL, `expiration_time` INTEGER, `size` INTEGER NOT NULL, `mime_type` TEXT NOT NULL, `attributes` INTEGER NOT NULL, `permissions` INTEGER NOT NULL, `node_key` TEXT NOT NULL, `node_passphrase` TEXT NOT NULL, `node_passphrase_signature` TEXT NOT NULL, `signature_address` TEXT NOT NULL, `creation_time` INTEGER NOT NULL, `last_modified` INTEGER NOT NULL, `trashed_time` INTEGER, `is_shared` INTEGER NOT NULL, `number_of_accesses` INTEGER NOT NULL, `share_url_expiration_time` INTEGER, `x_attr` TEXT, `share_url_share_id` TEXT DEFAULT NULL, `share_url_id` TEXT DEFAULT NULL, PRIMARY KEY(`user_id`, `share_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `parent_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parent_id",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nameSignatureEmail",
            "columnName": "name_signature_email",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expirationTime",
            "columnName": "expiration_time",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mime_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "attributes",
            "columnName": "attributes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "nodeKey",
            "columnName": "node_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nodePassphrase",
            "columnName": "node_passphrase",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nodePassphraseSignature",
            "columnName": "node_passphrase_signature",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "signatureAddress",
            "columnName": "signature_address",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "creationTime",
            "columnName": "creation_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastModified",
            "columnName": "last_modified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "trashedTime",
            "columnName": "trashed_time",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "shared",
            "columnName": "is_shared",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "numberOfAccesses",
            "columnName": "number_of_accesses",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shareUrlExpirationTime",
            "columnName": "share_url_expiration_time",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "xAttr",
            "columnName": "x_attr",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "sharingDetailsShareId",
            "columnName": "share_url_share_id",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "shareUrlId",
            "columnName": "share_url_id",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_LinkEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_LinkEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_LinkEntity_parent_id",
            "unique": false,
            "columnNames": [
              "parent_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkEntity_parent_id` ON `${TABLE_NAME}` (`parent_id`)"
          },
          {
            "name": "index_LinkEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_LinkEntity_user_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkEntity_user_id_share_id` ON `${TABLE_NAME}` (`user_id`, `share_id`)"
          },
          {
            "name": "index_LinkEntity_user_id_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkEntity_user_id_id` ON `${TABLE_NAME}` (`user_id`, `id`)"
          },
          {
            "name": "index_LinkEntity_user_id_share_id_parent_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "parent_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkEntity_user_id_share_id_parent_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `parent_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "parent_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "LinkFilePropertiesEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`file_user_id` TEXT NOT NULL, `file_share_id` TEXT NOT NULL, `file_link_id` TEXT NOT NULL, `revision_id` TEXT NOT NULL, `has_thumbnail` INTEGER NOT NULL, `content_key_packet` TEXT NOT NULL, `content_key_packet_signature` TEXT, `file_signature_address` TEXT, `capture_time` INTEGER DEFAULT NULL, `content_hash` TEXT DEFAULT NULL, `main_photo_link_id` TEXT DEFAULT NULL, `thumbnail_id_default` TEXT, `thumbnail_id_photo` TEXT, PRIMARY KEY(`file_user_id`, `file_share_id`, `file_link_id`), FOREIGN KEY(`file_user_id`, `file_share_id`, `file_link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "file_user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "file_share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "file_link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "activeRevisionId",
            "columnName": "revision_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hasThumbnail",
            "columnName": "has_thumbnail",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentKeyPacket",
            "columnName": "content_key_packet",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contentKeyPacketSignature",
            "columnName": "content_key_packet_signature",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "activeRevisionSignatureAddress",
            "columnName": "file_signature_address",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "photoCaptureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "photoContentHash",
            "columnName": "content_hash",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "mainPhotoLinkId",
            "columnName": "main_photo_link_id",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "defaultThumbnailId",
            "columnName": "thumbnail_id_default",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "photoThumbnailId",
            "columnName": "thumbnail_id_photo",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "file_user_id",
            "file_share_id",
            "file_link_id"
          ]
        },
        "indices": [
          {
            "name": "index_LinkFilePropertiesEntity_file_share_id",
            "unique": false,
            "columnNames": [
              "file_share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkFilePropertiesEntity_file_share_id` ON `${TABLE_NAME}` (`file_share_id`)"
          },
          {
            "name": "index_LinkFilePropertiesEntity_file_link_id",
            "unique": false,
            "columnNames": [
              "file_link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkFilePropertiesEntity_file_link_id` ON `${TABLE_NAME}` (`file_link_id`)"
          },
          {
            "name": "index_LinkFilePropertiesEntity_revision_id",
            "unique": false,
            "columnNames": [
              "revision_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkFilePropertiesEntity_revision_id` ON `${TABLE_NAME}` (`revision_id`)"
          },
          {
            "name": "index_LinkFilePropertiesEntity_file_user_id_file_share_id_file_link_id",
            "unique": false,
            "columnNames": [
              "file_user_id",
              "file_share_id",
              "file_link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkFilePropertiesEntity_file_user_id_file_share_id_file_link_id` ON `${TABLE_NAME}` (`file_user_id`, `file_share_id`, `file_link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "file_user_id",
              "file_share_id",
              "file_link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "LinkFolderPropertiesEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`folder_user_id` TEXT NOT NULL, `folder_share_id` TEXT NOT NULL, `folder_link_id` TEXT NOT NULL, `node_hash_key` TEXT NOT NULL, PRIMARY KEY(`folder_user_id`, `folder_share_id`, `folder_link_id`), FOREIGN KEY(`folder_user_id`, `folder_share_id`, `folder_link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "folder_user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "folder_share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "folder_link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nodeHashKey",
            "columnName": "node_hash_key",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "folder_user_id",
            "folder_share_id",
            "folder_link_id"
          ]
        },
        "indices": [
          {
            "name": "index_LinkFolderPropertiesEntity_folder_share_id",
            "unique": false,
            "columnNames": [
              "folder_share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkFolderPropertiesEntity_folder_share_id` ON `${TABLE_NAME}` (`folder_share_id`)"
          },
          {
            "name": "index_LinkFolderPropertiesEntity_folder_link_id",
            "unique": false,
            "columnNames": [
              "folder_link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkFolderPropertiesEntity_folder_link_id` ON `${TABLE_NAME}` (`folder_link_id`)"
          },
          {
            "name": "index_LinkFolderPropertiesEntity_folder_user_id_folder_share_id_folder_link_id",
            "unique": false,
            "columnNames": [
              "folder_user_id",
              "folder_share_id",
              "folder_link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkFolderPropertiesEntity_folder_user_id_folder_share_id_folder_link_id` ON `${TABLE_NAME}` (`folder_user_id`, `folder_share_id`, `folder_link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "folder_user_id",
              "folder_share_id",
              "folder_link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "LinkAlbumPropertiesEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`album_user_id` TEXT NOT NULL, `album_share_id` TEXT NOT NULL, `album_link_id` TEXT NOT NULL, `album_node_hash_key` TEXT NOT NULL, `locked` INTEGER NOT NULL, `last_activity_time` INTEGER NOT NULL, `count` INTEGER NOT NULL, `cover_link_id` TEXT, PRIMARY KEY(`album_user_id`, `album_share_id`, `album_link_id`), FOREIGN KEY(`album_user_id`, `album_share_id`, `album_link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "album_user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "album_share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "album_link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nodeHashKey",
            "columnName": "album_node_hash_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "locked",
            "columnName": "locked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastActivityTime",
            "columnName": "last_activity_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "photoCount",
            "columnName": "count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coverLinkId",
            "columnName": "cover_link_id",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "album_user_id",
            "album_share_id",
            "album_link_id"
          ]
        },
        "indices": [
          {
            "name": "index_LinkAlbumPropertiesEntity_album_share_id",
            "unique": false,
            "columnNames": [
              "album_share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkAlbumPropertiesEntity_album_share_id` ON `${TABLE_NAME}` (`album_share_id`)"
          },
          {
            "name": "index_LinkAlbumPropertiesEntity_album_link_id",
            "unique": false,
            "columnNames": [
              "album_link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkAlbumPropertiesEntity_album_link_id` ON `${TABLE_NAME}` (`album_link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "album_user_id",
              "album_share_id",
              "album_link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "LinkTagEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`tag_user_id` TEXT NOT NULL, `tag_share_id` TEXT NOT NULL, `tag_link_id` TEXT NOT NULL, `tag` INTEGER NOT NULL, PRIMARY KEY(`tag_user_id`, `tag_share_id`, `tag_link_id`, `tag`), FOREIGN KEY(`tag_user_id`, `tag_share_id`, `tag_link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "tag_user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "tag_share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "tag_link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "tag_user_id",
            "tag_share_id",
            "tag_link_id",
            "tag"
          ]
        },
        "indices": [
          {
            "name": "index_LinkTagEntity_tag_share_id_tag_link_id",
            "unique": false,
            "columnNames": [
              "tag_share_id",
              "tag_link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkTagEntity_tag_share_id_tag_link_id` ON `${TABLE_NAME}` (`tag_share_id`, `tag_link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "tag_user_id",
              "tag_share_id",
              "tag_link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "LinkOfflineEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `link_id`), FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "link_id"
          ]
        },
        "indices": [
          {
            "name": "index_LinkOfflineEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkOfflineEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_LinkOfflineEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkOfflineEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_LinkOfflineEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkOfflineEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_LinkOfflineEntity_user_id_share_id_link_id",
            "unique": true,
            "columnNames": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_LinkOfflineEntity_user_id_share_id_link_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "LinkDownloadStateEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `revision_id` TEXT NOT NULL, `state` TEXT NOT NULL, `manifest_signature` TEXT DEFAULT NULL, `signature_address` TEXT DEFAULT NULL, PRIMARY KEY(`user_id`, `share_id`, `link_id`, `revision_id`), FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "revisionId",
            "columnName": "revision_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "manifestSignature",
            "columnName": "manifest_signature",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "signatureAddress",
            "columnName": "signature_address",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "link_id",
            "revision_id"
          ]
        },
        "indices": [
          {
            "name": "index_LinkDownloadStateEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkDownloadStateEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_LinkDownloadStateEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkDownloadStateEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_LinkDownloadStateEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkDownloadStateEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_LinkDownloadStateEntity_revision_id",
            "unique": false,
            "columnNames": [
              "revision_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkDownloadStateEntity_revision_id` ON `${TABLE_NAME}` (`revision_id`)"
          },
          {
            "name": "index_LinkDownloadStateEntity_state",
            "unique": false,
            "columnNames": [
              "state"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkDownloadStateEntity_state` ON `${TABLE_NAME}` (`state`)"
          },
          {
            "name": "index_LinkDownloadStateEntity_user_id_share_id_link_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkDownloadStateEntity_user_id_share_id_link_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "DownloadBlockEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `revision_id` TEXT NOT NULL, `index` INTEGER NOT NULL, `uri` TEXT NOT NULL, `encrypted_signature` TEXT, PRIMARY KEY(`user_id`, `share_id`, `link_id`, `revision_id`, `index`), FOREIGN KEY(`user_id`, `share_id`, `link_id`, `revision_id`) REFERENCES `LinkDownloadStateEntity`(`user_id`, `share_id`, `link_id`, `revision_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "revisionId",
            "columnName": "revision_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "index",
            "columnName": "index",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uri",
            "columnName": "uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "encryptedSignature",
            "columnName": "encrypted_signature",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "link_id",
            "revision_id",
            "index"
          ]
        },
        "indices": [
          {
            "name": "index_DownloadBlockEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DownloadBlockEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_DownloadBlockEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DownloadBlockEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_DownloadBlockEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DownloadBlockEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_DownloadBlockEntity_revision_id",
            "unique": false,
            "columnNames": [
              "revision_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DownloadBlockEntity_revision_id` ON `${TABLE_NAME}` (`revision_id`)"
          },
          {
            "name": "index_DownloadBlockEntity_user_id_share_id_link_id_revision_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "link_id",
              "revision_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DownloadBlockEntity_user_id_share_id_link_id_revision_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `link_id`, `revision_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkDownloadStateEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id",
              "revision_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "link_id",
              "revision_id"
            ]
          }
        ]
      },
      {
        "tableName": "LinkTrashStateEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `state` TEXT NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `link_id`), FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "link_id"
          ]
        },
        "indices": [
          {
            "name": "index_LinkTrashStateEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkTrashStateEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_LinkTrashStateEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkTrashStateEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_LinkTrashStateEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkTrashStateEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_LinkTrashStateEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkTrashStateEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_LinkTrashStateEntity_state",
            "unique": false,
            "columnNames": [
              "state"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkTrashStateEntity_state` ON `${TABLE_NAME}` (`state`)"
          },
          {
            "name": "index_LinkTrashStateEntity_user_id_share_id_link_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkTrashStateEntity_user_id_share_id_link_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "FileDownloadEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `link_id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `revision_id` TEXT NOT NULL, `priority` INTEGER NOT NULL, `retryable` INTEGER NOT NULL, `state` TEXT NOT NULL, `parent_id` TEXT, `number_of_retries` INTEGER NOT NULL, `run_at` INTEGER, `network_type` TEXT NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fileId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "revisionId",
            "columnName": "revision_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "retryable",
            "columnName": "retryable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parent_id",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "numberOfRetries",
            "columnName": "number_of_retries",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastRunTimestamp",
            "columnName": "run_at",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "networkType",
            "columnName": "network_type",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_FileDownloadEntity_user_id_volume_id_share_id_link_id_revision_id",
            "unique": true,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id",
              "link_id",
              "revision_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_FileDownloadEntity_user_id_volume_id_share_id_link_id_revision_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`, `link_id`, `revision_id`)"
          },
          {
            "name": "index_FileDownloadEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_FileDownloadEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_FileDownloadEntity_priority",
            "unique": false,
            "columnNames": [
              "priority"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_FileDownloadEntity_priority` ON `${TABLE_NAME}` (`priority`)"
          },
          {
            "name": "index_FileDownloadEntity_user_id_state",
            "unique": false,
            "columnNames": [
              "user_id",
              "state"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_FileDownloadEntity_user_id_state` ON `${TABLE_NAME}` (`user_id`, `state`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ParentLinkDownloadEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `link_id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `type` INTEGER NOT NULL, `priority` INTEGER NOT NULL, `retryable` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkType",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "retryable",
            "columnName": "retryable",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ParentLinkDownloadEntity_user_id_volume_id_share_id_link_id",
            "unique": true,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ParentLinkDownloadEntity_user_id_volume_id_share_id_link_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`, `link_id`)"
          },
          {
            "name": "index_ParentLinkDownloadEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ParentLinkDownloadEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "TrashWorkEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `work_id` TEXT NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `link_id`), FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "workId",
            "columnName": "work_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "link_id"
          ]
        },
        "indices": [
          {
            "name": "index_TrashWorkEntity_user_id_share_id_link_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TrashWorkEntity_user_id_share_id_link_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `link_id`)"
          },
          {
            "name": "index_TrashWorkEntity_work_id",
            "unique": false,
            "columnNames": [
              "work_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TrashWorkEntity_work_id` ON `${TABLE_NAME}` (`work_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "MessageEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` TEXT NOT NULL, `content` TEXT NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_MessageEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MessageEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "UiSettingsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `layout_type` TEXT NOT NULL, `theme_style` TEXT NOT NULL, `home_tab` TEXT DEFAULT NULL, PRIMARY KEY(`user_id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "layoutType",
            "columnName": "layout_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "themeStyle",
            "columnName": "theme_style",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "homeTab",
            "columnName": "home_tab",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id"
          ]
        },
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "DriveLinkRemoteKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `user_id` TEXT NOT NULL, `previous_key` INTEGER, `next_key` INTEGER, PRIMARY KEY(`key`, `user_id`, `share_id`, `link_id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "prevKey",
            "columnName": "previous_key",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "nextKey",
            "columnName": "next_key",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "key",
            "user_id",
            "share_id",
            "link_id"
          ]
        },
        "indices": [
          {
            "name": "index_DriveLinkRemoteKeyEntity_user_id_share_id_link_id",
            "unique": true,
            "columnNames": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_DriveLinkRemoteKeyEntity_user_id_share_id_link_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `link_id`)"
          },
          {
            "name": "index_DriveLinkRemoteKeyEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DriveLinkRemoteKeyEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_DriveLinkRemoteKeyEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DriveLinkRemoteKeyEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_DriveLinkRemoteKeyEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DriveLinkRemoteKeyEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_DriveLinkRemoteKeyEntity_key",
            "unique": false,
            "columnNames": [
              "key"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DriveLinkRemoteKeyEntity_key` ON `${TABLE_NAME}` (`key`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "SortingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `sorting_by` TEXT NOT NULL, `sorting_direction` TEXT NOT NULL, PRIMARY KEY(`user_id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sortingBy",
            "columnName": "sorting_by",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sortingDirection",
            "columnName": "sorting_direction",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id"
          ]
        },
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "LinkUploadEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `parent_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `revision_id` TEXT NOT NULL, `name` TEXT NOT NULL, `mime_type` TEXT NOT NULL, `node_key` TEXT NOT NULL, `node_passphrase` TEXT NOT NULL, `node_passphrase_signature` TEXT NOT NULL, `content_key_packet` TEXT NOT NULL, `content_key_packet_signature` TEXT NOT NULL, `manifest_signature` TEXT NOT NULL, `state` TEXT NOT NULL, `size` INTEGER DEFAULT NULL, `last_modified` INTEGER, `uri` TEXT DEFAULT NULL, `should_delete_source_uri` INTEGER NOT NULL DEFAULT false, `media_resolution_width` INTEGER DEFAULT NULL, `media_resolution_height` INTEGER DEFAULT NULL, `digests` TEXT DEFAULT NULL, `network_type_provider_type` TEXT NOT NULL DEFAULT 'DEFAULT', `duration` INTEGER DEFAULT NULL, `latitude` REAL DEFAULT NULL, `longitude` REAL DEFAULT NULL, `creation_time` INTEGER DEFAULT NULL, `model` TEXT DEFAULT NULL, `orientation` INTEGER DEFAULT NULL, `subject_area` TEXT DEFAULT NULL, `should_announce_event` INTEGER NOT NULL DEFAULT true, `cache_option` TEXT NOT NULL DEFAULT 'ALL', `priority` INTEGER NOT NULL DEFAULT 9223372036854775807, `upload_creation_time` INTEGER, `should_broadcast_error_message` INTEGER NOT NULL DEFAULT true, FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parent_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "revisionId",
            "columnName": "revision_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mime_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nodeKey",
            "columnName": "node_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nodePassphrase",
            "columnName": "node_passphrase",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nodePassphraseSignature",
            "columnName": "node_passphrase_signature",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contentKeyPacket",
            "columnName": "content_key_packet",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contentKeyPacketSignature",
            "columnName": "content_key_packet_signature",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "manifestSignature",
            "columnName": "manifest_signature",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "lastModified",
            "columnName": "last_modified",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "uri",
            "columnName": "uri",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "shouldDeleteSourceUri",
            "columnName": "should_delete_source_uri",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          },
          {
            "fieldPath": "mediaResolutionWidth",
            "columnName": "media_resolution_width",
            "affinity": "INTEGER",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "mediaResolutionHeight",
            "columnName": "media_resolution_height",
            "affinity": "INTEGER",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "digests",
            "columnName": "digests",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "networkTypeProviderType",
            "columnName": "network_type_provider_type",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'DEFAULT'"
          },
          {
            "fieldPath": "mediaDuration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "latitude",
            "columnName": "latitude",
            "affinity": "REAL",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "longitude",
            "columnName": "longitude",
            "affinity": "REAL",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "cameraCreationDateTime",
            "columnName": "creation_time",
            "affinity": "INTEGER",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "cameraModel",
            "columnName": "model",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "cameraOrientation",
            "columnName": "orientation",
            "affinity": "INTEGER",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "cameraSubjectArea",
            "columnName": "subject_area",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "shouldAnnounceEvent",
            "columnName": "should_announce_event",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "true"
          },
          {
            "fieldPath": "cacheOption",
            "columnName": "cache_option",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'ALL'"
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "9223372036854775807"
          },
          {
            "fieldPath": "uploadCreationDateTime",
            "columnName": "upload_creation_time",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "shouldBroadcastErrorMessage",
            "columnName": "should_broadcast_error_message",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "true"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_LinkUploadEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkUploadEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_LinkUploadEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkUploadEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_LinkUploadEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkUploadEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_LinkUploadEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkUploadEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_LinkUploadEntity_revision_id",
            "unique": false,
            "columnNames": [
              "revision_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkUploadEntity_revision_id` ON `${TABLE_NAME}` (`revision_id`)"
          },
          {
            "name": "index_LinkUploadEntity_parent_id",
            "unique": false,
            "columnNames": [
              "parent_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkUploadEntity_parent_id` ON `${TABLE_NAME}` (`parent_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "UploadBlockEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`upload_link_id` INTEGER NOT NULL, `index` INTEGER NOT NULL, `size` INTEGER NOT NULL, `encrypted_signature` TEXT NOT NULL, `hash` TEXT NOT NULL, `token` TEXT NOT NULL, `url` TEXT NOT NULL, `raw_size` INTEGER NOT NULL DEFAULT 0, `type` TEXT NOT NULL DEFAULT 'FILE', `verifier_token` TEXT DEFAULT NULL, PRIMARY KEY(`upload_link_id`, `index`), FOREIGN KEY(`upload_link_id`) REFERENCES `LinkUploadEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "uploadLinkId",
            "columnName": "upload_link_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "index",
            "columnName": "index",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "encryptedSignature",
            "columnName": "encrypted_signature",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uploadToken",
            "columnName": "token",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "rawSize",
            "columnName": "raw_size",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'FILE'"
          },
          {
            "fieldPath": "verifierToken",
            "columnName": "verifier_token",
            "affinity": "TEXT",
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "upload_link_id",
            "index"
          ]
        },
        "foreignKeys": [
          {
            "table": "LinkUploadEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "upload_link_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "UploadBulkEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `parent_id` TEXT NOT NULL, `should_delete_source_uri` INTEGER NOT NULL, `network_type_provider_type` TEXT NOT NULL DEFAULT 'DEFAULT', `should_announce_event` INTEGER NOT NULL DEFAULT true, `cache_option` TEXT NOT NULL DEFAULT 'ALL', `priority` INTEGER NOT NULL DEFAULT 9223372036854775807, `should_broadcast_error_message` INTEGER NOT NULL DEFAULT true, FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parent_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shouldDeleteSourceUri",
            "columnName": "should_delete_source_uri",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "networkTypeProviderType",
            "columnName": "network_type_provider_type",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'DEFAULT'"
          },
          {
            "fieldPath": "shouldAnnounceEvent",
            "columnName": "should_announce_event",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "true"
          },
          {
            "fieldPath": "cacheOption",
            "columnName": "cache_option",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'ALL'"
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "9223372036854775807"
          },
          {
            "fieldPath": "shouldBroadcastErrorMessage",
            "columnName": "should_broadcast_error_message",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "true"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_UploadBulkEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UploadBulkEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_UploadBulkEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UploadBulkEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_UploadBulkEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UploadBulkEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_UploadBulkEntity_parent_id",
            "unique": false,
            "columnNames": [
              "parent_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UploadBulkEntity_parent_id` ON `${TABLE_NAME}` (`parent_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "UploadBulkUriStringEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `upload_bulk_id` INTEGER NOT NULL, `uri` TEXT NOT NULL, `name` TEXT, `mime_type` TEXT, `size` INTEGER, `last_modified` INTEGER, FOREIGN KEY(`upload_bulk_id`) REFERENCES `UploadBulkEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uploadBulkId",
            "columnName": "upload_bulk_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uri",
            "columnName": "uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mime_type",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "lastModified",
            "columnName": "last_modified",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "key"
          ]
        },
        "indices": [
          {
            "name": "index_UploadBulkUriStringEntity_upload_bulk_id",
            "unique": false,
            "columnNames": [
              "upload_bulk_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UploadBulkUriStringEntity_upload_bulk_id` ON `${TABLE_NAME}` (`upload_bulk_id`)"
          },
          {
            "name": "index_UploadBulkUriStringEntity_uri",
            "unique": false,
            "columnNames": [
              "uri"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UploadBulkUriStringEntity_uri` ON `${TABLE_NAME}` (`uri`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "UploadBulkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "upload_bulk_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "UploadTagEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`upload_link_id` INTEGER NOT NULL, `tag` INTEGER NOT NULL, PRIMARY KEY(`upload_link_id`, `tag`), FOREIGN KEY(`upload_link_id`) REFERENCES `LinkUploadEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "uploadLinkId",
            "columnName": "upload_link_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "upload_link_id",
            "tag"
          ]
        },
        "foreignKeys": [
          {
            "table": "LinkUploadEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "upload_link_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "FolderMetadataEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `last_fetch_children_timestamp` INTEGER, PRIMARY KEY(`user_id`, `share_id`, `link_id`), FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastFetchChildrenTimestamp",
            "columnName": "last_fetch_children_timestamp",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "link_id"
          ]
        },
        "foreignKeys": [
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "TrashMetadataEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `last_fetch_trash_timestamp` INTEGER, PRIMARY KEY(`user_id`, `volume_id`), FOREIGN KEY(`user_id`, `volume_id`) REFERENCES `VolumeEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastFetchTrashTimestamp",
            "columnName": "last_fetch_trash_timestamp",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id"
          ]
        },
        "foreignKeys": [
          {
            "table": "VolumeEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "volume_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "RawBlockEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`upload_link_id` INTEGER NOT NULL, `index` INTEGER NOT NULL, `name` TEXT NOT NULL, PRIMARY KEY(`upload_link_id`, `index`), FOREIGN KEY(`upload_link_id`) REFERENCES `LinkUploadEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "uploadLinkId",
            "columnName": "upload_link_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "index",
            "columnName": "index",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "upload_link_id",
            "index"
          ]
        },
        "indices": [
          {
            "name": "index_RawBlockEntity_upload_link_id",
            "unique": false,
            "columnNames": [
              "upload_link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_RawBlockEntity_upload_link_id` ON `${TABLE_NAME}` (`upload_link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkUploadEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "upload_link_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "BackupConfigurationEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `parent_id` TEXT NOT NULL, `network_type` TEXT NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `parent_id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `parent_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parent_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "networkType",
            "columnName": "network_type",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "parent_id"
          ]
        },
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "parent_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "BackupDuplicateEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `parent_id` TEXT NOT NULL, `hash` TEXT NOT NULL, `content_hash` TEXT, `link_id` TEXT, `state` TEXT, `revision_id` TEXT, `client_uid` TEXT, FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `parent_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parent_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contentHash",
            "columnName": "content_hash",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "linkState",
            "columnName": "state",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "revisionId",
            "columnName": "revision_id",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "clientUid",
            "columnName": "client_uid",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "parent_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "BackupErrorEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `parent_id` TEXT NOT NULL, `error` TEXT NOT NULL, `retryable` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `parent_id`, `error`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `parent_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parent_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "error",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "retryable",
            "columnName": "retryable",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "parent_id",
            "error"
          ]
        },
        "indices": [
          {
            "name": "index_BackupErrorEntity_user_id_share_id_parent_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "parent_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BackupErrorEntity_user_id_share_id_parent_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `parent_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "parent_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "BackupFileEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `parent_id` TEXT NOT NULL, `bucket_id` INTEGER NOT NULL, `uri` TEXT NOT NULL, `mime_type` TEXT NOT NULL, `name` TEXT NOT NULL, `hash` TEXT NOT NULL, `size` INTEGER NOT NULL, `state` TEXT NOT NULL DEFAULT 'IDLE', `creation_time` INTEGER NOT NULL, `priority` INTEGER NOT NULL DEFAULT 9223372036854775807, `attempts` INTEGER NOT NULL DEFAULT 0, `last_modified` INTEGER, PRIMARY KEY(`user_id`, `share_id`, `parent_id`, `uri`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `parent_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `parent_id`, `bucket_id`) REFERENCES `BackupFolderEntity`(`user_id`, `share_id`, `parent_id`, `bucket_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parent_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bucketId",
            "columnName": "bucket_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uriString",
            "columnName": "uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mime_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'IDLE'"
          },
          {
            "fieldPath": "createTime",
            "columnName": "creation_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uploadPriority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "9223372036854775807"
          },
          {
            "fieldPath": "attempts",
            "columnName": "attempts",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "lastModified",
            "columnName": "last_modified",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "parent_id",
            "uri"
          ]
        },
        "indices": [
          {
            "name": "index_BackupFileEntity_user_id_share_id_parent_id_bucket_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "parent_id",
              "bucket_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BackupFileEntity_user_id_share_id_parent_id_bucket_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `parent_id`, `bucket_id`)"
          },
          {
            "name": "index_BackupFileEntity_user_id_share_id_parent_id_uri",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "parent_id",
              "uri"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BackupFileEntity_user_id_share_id_parent_id_uri` ON `${TABLE_NAME}` (`user_id`, `share_id`, `parent_id`, `uri`)"
          },
          {
            "name": "index_BackupFileEntity_user_id_share_id_parent_id_state",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "parent_id",
              "state"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BackupFileEntity_user_id_share_id_parent_id_state` ON `${TABLE_NAME}` (`user_id`, `share_id`, `parent_id`, `state`)"
          },
          {
            "name": "index_BackupFileEntity_user_id_share_id_parent_id_bucket_id_state",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "parent_id",
              "bucket_id",
              "state"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BackupFileEntity_user_id_share_id_parent_id_bucket_id_state` ON `${TABLE_NAME}` (`user_id`, `share_id`, `parent_id`, `bucket_id`, `state`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "parent_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          },
          {
            "table": "BackupFolderEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "parent_id",
              "bucket_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "parent_id",
              "bucket_id"
            ]
          }
        ]
      },
      {
        "tableName": "BackupFolderEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `parent_id` TEXT NOT NULL, `bucket_id` INTEGER NOT NULL, `update_time` INTEGER, `sync_time` INTEGER DEFAULT NULL, PRIMARY KEY(`user_id`, `share_id`, `parent_id`, `bucket_id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `parent_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parent_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bucketId",
            "columnName": "bucket_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updateTime",
            "columnName": "update_time",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "syncTime",
            "columnName": "sync_time",
            "affinity": "INTEGER",
            "defaultValue": "NULL"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "parent_id",
            "bucket_id"
          ]
        },
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "parent_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "InitialBackupEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `parent_id` TEXT NOT NULL, `creation_time` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `parent_id`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parent_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "creationTime",
            "columnName": "creation_time",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "parent_id"
          ]
        }
      },
      {
        "tableName": "UploadStatsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `count` INTEGER NOT NULL, `size` INTEGER NOT NULL, `creation_time` INTEGER NOT NULL, `capture_time` INTEGER, PRIMARY KEY(`user_id`, `share_id`, `link_id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "folderId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "count",
            "columnName": "count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minimumUploadCreationDateTime",
            "columnName": "creation_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minimumFileCreationDateTime",
            "columnName": "capture_time",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "link_id"
          ]
        },
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "DismissedQuotaEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `level` TEXT NOT NULL, `max_space` INTEGER NOT NULL, `update_time` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `level`, `max_space`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "level",
            "columnName": "level",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "maxSpace",
            "columnName": "max_space",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestampS",
            "columnName": "update_time",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "level",
            "max_space"
          ]
        },
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "DismissedUserMessageEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `user_message` TEXT NOT NULL, `update_time` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `user_message`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userMessage",
            "columnName": "user_message",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestampS",
            "columnName": "update_time",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "user_message"
          ]
        },
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "NotificationChannelEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `type` TEXT NOT NULL, PRIMARY KEY(`user_id`, `type`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "type"
          ]
        },
        "indices": [
          {
            "name": "index_NotificationChannelEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_NotificationChannelEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "NotificationEventEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `channel_type` TEXT NOT NULL, `notification_tag` TEXT NOT NULL, `notification_id` INTEGER NOT NULL, `notification_event_id` TEXT NOT NULL, `notification_event` TEXT NOT NULL, PRIMARY KEY(`user_id`, `channel_type`, `notification_tag`, `notification_id`, `notification_event_id`), FOREIGN KEY(`user_id`, `channel_type`) REFERENCES `NotificationChannelEntity`(`user_id`, `type`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "channelType",
            "columnName": "channel_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationTag",
            "columnName": "notification_tag",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationId",
            "columnName": "notification_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationEventId",
            "columnName": "notification_event_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationEvent",
            "columnName": "notification_event",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "channel_type",
            "notification_tag",
            "notification_id",
            "notification_event_id"
          ]
        },
        "indices": [
          {
            "name": "index_NotificationEventEntity_user_id_channel_type_notification_tag_notification_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "channel_type",
              "notification_tag",
              "notification_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_NotificationEventEntity_user_id_channel_type_notification_tag_notification_id` ON `${TABLE_NAME}` (`user_id`, `channel_type`, `notification_tag`, `notification_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "NotificationChannelEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "channel_type"
            ],
            "referencedColumns": [
              "user_id",
              "type"
            ]
          }
        ]
      },
      {
        "tableName": "TaglessNotificationEventEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `channel_type` TEXT NOT NULL, `notification_id` INTEGER NOT NULL, `notification_event_id` TEXT NOT NULL, `notification_event` TEXT NOT NULL, PRIMARY KEY(`user_id`, `channel_type`, `notification_id`, `notification_event_id`), FOREIGN KEY(`user_id`, `channel_type`) REFERENCES `NotificationChannelEntity`(`user_id`, `type`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "channelType",
            "columnName": "channel_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationId",
            "columnName": "notification_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationEventId",
            "columnName": "notification_event_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationEvent",
            "columnName": "notification_event",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "channel_type",
            "notification_id",
            "notification_event_id"
          ]
        },
        "indices": [
          {
            "name": "index_TaglessNotificationEventEntity_user_id_channel_type_notification_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "channel_type",
              "notification_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaglessNotificationEventEntity_user_id_channel_type_notification_id` ON `${TABLE_NAME}` (`user_id`, `channel_type`, `notification_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "NotificationChannelEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "channel_type"
            ],
            "referencedColumns": [
              "user_id",
              "type"
            ]
          }
        ]
      },
      {
        "tableName": "LinkSelectionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `selection_id` TEXT NOT NULL, PRIMARY KEY(`user_id`, `share_id`, `link_id`, `selection_id`), FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "selectionId",
            "columnName": "selection_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "link_id",
            "selection_id"
          ]
        },
        "indices": [
          {
            "name": "index_LinkSelectionEntity_user_id_share_id_link_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkSelectionEntity_user_id_share_id_link_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `link_id`)"
          },
          {
            "name": "index_LinkSelectionEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkSelectionEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_LinkSelectionEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkSelectionEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_LinkSelectionEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkSelectionEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_LinkSelectionEntity_selection_id",
            "unique": false,
            "columnNames": [
              "selection_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LinkSelectionEntity_selection_id` ON `${TABLE_NAME}` (`selection_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "WorkerRunEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` TEXT NOT NULL, `worker_id` TEXT NOT NULL, `run_at` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "workerId",
            "columnName": "worker_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "runAt",
            "columnName": "run_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_WorkerRunEntity_worker_id",
            "unique": false,
            "columnNames": [
              "worker_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_WorkerRunEntity_worker_id` ON `${TABLE_NAME}` (`worker_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "PhotoListingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `id` TEXT NOT NULL, `capture_time` INTEGER NOT NULL, `hash` TEXT, `content_hash` TEXT, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "captureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "contentHash",
            "columnName": "content_hash",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_PhotoListingEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PhotoListingEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_PhotoListingEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PhotoListingEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_PhotoListingEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PhotoListingEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_PhotoListingEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PhotoListingEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_PhotoListingEntity_user_id_volume_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PhotoListingEntity_user_id_volume_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`)"
          },
          {
            "name": "index_PhotoListingEntity_user_id_share_id_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PhotoListingEntity_user_id_share_id_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `id`)"
          },
          {
            "name": "index_PhotoListingEntity_user_id_volume_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PhotoListingEntity_user_id_volume_id_share_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`)"
          },
          {
            "name": "index_PhotoListingEntity_user_id_volume_id_capture_time_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "capture_time",
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PhotoListingEntity_user_id_volume_id_capture_time_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `capture_time`, `id`)"
          },
          {
            "name": "index_PhotoListingEntity_user_id_volume_id_share_id_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id",
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PhotoListingEntity_user_id_volume_id_share_id_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`, `id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "RelatedPhotoEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `id` TEXT NOT NULL, `main_photo_link_id` TEXT NOT NULL, `capture_time` INTEGER NOT NULL, `hash` TEXT, `content_hash` TEXT, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `volume_id`, `share_id`, `main_photo_link_id`) REFERENCES `PhotoListingEntity`(`user_id`, `volume_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mainPhotoLinkId",
            "columnName": "main_photo_link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "captureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "contentHash",
            "columnName": "content_hash",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_RelatedPhotoEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_RelatedPhotoEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_RelatedPhotoEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_RelatedPhotoEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_RelatedPhotoEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_RelatedPhotoEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_RelatedPhotoEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_RelatedPhotoEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_RelatedPhotoEntity_user_id_volume_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_RelatedPhotoEntity_user_id_volume_id_share_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`)"
          },
          {
            "name": "index_RelatedPhotoEntity_user_id_volume_id_main_photo_link_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "main_photo_link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_RelatedPhotoEntity_user_id_volume_id_main_photo_link_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `main_photo_link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "PhotoListingEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "volume_id",
              "share_id",
              "main_photo_link_id"
            ],
            "referencedColumns": [
              "user_id",
              "volume_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "TaggedPhotoListingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `tag` INTEGER NOT NULL, `id` TEXT NOT NULL, `capture_time` INTEGER NOT NULL, `hash` TEXT, `content_hash` TEXT, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `tag`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "captureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "contentHash",
            "columnName": "content_hash",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "tag",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_TaggedPhotoListingEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedPhotoListingEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_TaggedPhotoListingEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedPhotoListingEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_TaggedPhotoListingEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedPhotoListingEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_TaggedPhotoListingEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedPhotoListingEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_TaggedPhotoListingEntity_user_id_volume_id_share_id_tag",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id",
              "tag"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedPhotoListingEntity_user_id_volume_id_share_id_tag` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`, `tag`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "TaggedRelatedPhotoEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `tag` INTEGER NOT NULL, `id` TEXT NOT NULL, `main_photo_link_id` TEXT NOT NULL, `capture_time` INTEGER NOT NULL, `hash` TEXT, `content_hash` TEXT, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `tag`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `volume_id`, `share_id`, `tag`, `main_photo_link_id`) REFERENCES `TaggedPhotoListingEntity`(`user_id`, `volume_id`, `share_id`, `tag`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mainPhotoLinkId",
            "columnName": "main_photo_link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "captureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "contentHash",
            "columnName": "content_hash",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "tag",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_TaggedRelatedPhotoEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedRelatedPhotoEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_TaggedRelatedPhotoEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedRelatedPhotoEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_TaggedRelatedPhotoEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedRelatedPhotoEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_TaggedRelatedPhotoEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedRelatedPhotoEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_TaggedRelatedPhotoEntity_user_id_volume_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedRelatedPhotoEntity_user_id_volume_id_share_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`)"
          },
          {
            "name": "index_TaggedRelatedPhotoEntity_user_id_volume_id_main_photo_link_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "main_photo_link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedRelatedPhotoEntity_user_id_volume_id_main_photo_link_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `main_photo_link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "TaggedPhotoListingEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "volume_id",
              "share_id",
              "tag",
              "main_photo_link_id"
            ],
            "referencedColumns": [
              "user_id",
              "volume_id",
              "share_id",
              "tag",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "PhotoListingRemoteKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `key` TEXT NOT NULL, `user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `capture_time` INTEGER NOT NULL, `previous_key` TEXT, `next_key` TEXT, FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `volume_id`, `share_id`, `link_id`) REFERENCES `PhotoListingEntity`(`user_id`, `volume_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "captureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "prevKey",
            "columnName": "previous_key",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "nextKey",
            "columnName": "next_key",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_PhotoListingRemoteKeyEntity_key",
            "unique": false,
            "columnNames": [
              "key"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PhotoListingRemoteKeyEntity_key` ON `${TABLE_NAME}` (`key`)"
          },
          {
            "name": "index_PhotoListingRemoteKeyEntity_key_user_id_volume_id_share_id_link_id",
            "unique": true,
            "columnNames": [
              "key",
              "user_id",
              "volume_id",
              "share_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_PhotoListingRemoteKeyEntity_key_user_id_volume_id_share_id_link_id` ON `${TABLE_NAME}` (`key`, `user_id`, `volume_id`, `share_id`, `link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "PhotoListingEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "volume_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "volume_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "TaggedPhotoListingRemoteKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `key` TEXT NOT NULL, `user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `tag` INTEGER NOT NULL, `link_id` TEXT NOT NULL, `capture_time` INTEGER NOT NULL, `previous_key` TEXT, `next_key` TEXT, FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `volume_id`, `share_id`, `tag`, `link_id`) REFERENCES `TaggedPhotoListingEntity`(`user_id`, `volume_id`, `share_id`, `tag`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "captureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "prevKey",
            "columnName": "previous_key",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "nextKey",
            "columnName": "next_key",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_TaggedPhotoListingRemoteKeyEntity_key",
            "unique": false,
            "columnNames": [
              "key"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TaggedPhotoListingRemoteKeyEntity_key` ON `${TABLE_NAME}` (`key`)"
          },
          {
            "name": "index_TaggedPhotoListingRemoteKeyEntity_key_user_id_volume_id_share_id_tag_link_id",
            "unique": true,
            "columnNames": [
              "key",
              "user_id",
              "volume_id",
              "share_id",
              "tag",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_TaggedPhotoListingRemoteKeyEntity_key_user_id_volume_id_share_id_tag_link_id` ON `${TABLE_NAME}` (`key`, `user_id`, `volume_id`, `share_id`, `tag`, `link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "TaggedPhotoListingEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "volume_id",
              "share_id",
              "tag",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "volume_id",
              "share_id",
              "tag",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AlbumRelatedPhotoEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `album_id` TEXT NOT NULL, `id` TEXT NOT NULL, `main_photo_link_id` TEXT NOT NULL, `capture_time` INTEGER NOT NULL, `hash` TEXT, `content_hash` TEXT, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `album_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `volume_id`, `share_id`, `album_id`, `main_photo_link_id`) REFERENCES `AlbumPhotoListingEntity`(`user_id`, `volume_id`, `share_id`, `album_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "albumId",
            "columnName": "album_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mainPhotoLinkId",
            "columnName": "main_photo_link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "captureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "contentHash",
            "columnName": "content_hash",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "album_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_AlbumRelatedPhotoEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumRelatedPhotoEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_AlbumRelatedPhotoEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumRelatedPhotoEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_AlbumRelatedPhotoEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumRelatedPhotoEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_AlbumRelatedPhotoEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumRelatedPhotoEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_AlbumRelatedPhotoEntity_user_id_volume_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumRelatedPhotoEntity_user_id_volume_id_share_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`)"
          },
          {
            "name": "index_AlbumRelatedPhotoEntity_user_id_volume_id_album_id_main_photo_link_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "album_id",
              "main_photo_link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumRelatedPhotoEntity_user_id_volume_id_album_id_main_photo_link_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `album_id`, `main_photo_link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "AlbumPhotoListingEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "volume_id",
              "share_id",
              "album_id",
              "main_photo_link_id"
            ],
            "referencedColumns": [
              "user_id",
              "volume_id",
              "share_id",
              "album_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AlbumPhotoListingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `album_id` TEXT NOT NULL, `id` TEXT NOT NULL, `capture_time` INTEGER NOT NULL, `added_time` INTEGER NOT NULL, `is_child_of_album` INTEGER NOT NULL, `hash` TEXT, `content_hash` TEXT, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `album_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "albumId",
            "columnName": "album_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "captureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "addedTime",
            "columnName": "added_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isChildOfAlbum",
            "columnName": "is_child_of_album",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "contentHash",
            "columnName": "content_hash",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "album_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_AlbumPhotoListingEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumPhotoListingEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_AlbumPhotoListingEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumPhotoListingEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_AlbumPhotoListingEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumPhotoListingEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_AlbumPhotoListingEntity_album_id",
            "unique": false,
            "columnNames": [
              "album_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumPhotoListingEntity_album_id` ON `${TABLE_NAME}` (`album_id`)"
          },
          {
            "name": "index_AlbumPhotoListingEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumPhotoListingEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_AlbumPhotoListingEntity_user_id_volume_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumPhotoListingEntity_user_id_volume_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`)"
          },
          {
            "name": "index_AlbumPhotoListingEntity_user_id_volume_id_share_id_album_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id",
              "album_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumPhotoListingEntity_user_id_volume_id_share_id_album_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`, `album_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AlbumListingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `id` TEXT NOT NULL, `locked` INTEGER NOT NULL, `count` INTEGER NOT NULL, `last_activity_time` INTEGER NOT NULL, `link_id` TEXT, `is_shared` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "albumId",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "locked",
            "columnName": "locked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "photoCount",
            "columnName": "count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastActivityTime",
            "columnName": "last_activity_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coverLinkId",
            "columnName": "link_id",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "isShared",
            "columnName": "is_shared",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_AlbumListingEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumListingEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_AlbumListingEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumListingEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_AlbumListingEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumListingEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_AlbumListingEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumListingEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_AlbumListingEntity_user_id_volume_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumListingEntity_user_id_volume_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`)"
          },
          {
            "name": "index_AlbumListingEntity_user_id_volume_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumListingEntity_user_id_volume_id_share_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AlbumPhotoListingRemoteKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `key` TEXT NOT NULL, `user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `album_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `previous_key` TEXT, `next_key` TEXT, FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `volume_id`, `share_id`, `album_id`, `link_id`) REFERENCES `AlbumPhotoListingEntity`(`user_id`, `volume_id`, `share_id`, `album_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "albumId",
            "columnName": "album_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "prevKey",
            "columnName": "previous_key",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "nextKey",
            "columnName": "next_key",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_AlbumPhotoListingRemoteKeyEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumPhotoListingRemoteKeyEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_AlbumPhotoListingRemoteKeyEntity_key",
            "unique": false,
            "columnNames": [
              "key"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AlbumPhotoListingRemoteKeyEntity_key` ON `${TABLE_NAME}` (`key`)"
          },
          {
            "name": "index_AlbumPhotoListingRemoteKeyEntity_key_user_id_volume_id_share_id_album_id_link_id",
            "unique": true,
            "columnNames": [
              "key",
              "user_id",
              "volume_id",
              "share_id",
              "album_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_AlbumPhotoListingRemoteKeyEntity_key_user_id_volume_id_share_id_album_id_link_id` ON `${TABLE_NAME}` (`key`, `user_id`, `volume_id`, `share_id`, `album_id`, `link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "AlbumPhotoListingEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "volume_id",
              "share_id",
              "album_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "volume_id",
              "share_id",
              "album_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "MediaStoreVersionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `media_store_volume_name` TEXT NOT NULL, `version` TEXT, PRIMARY KEY(`user_id`, `media_store_volume_name`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeName",
            "columnName": "media_store_volume_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "version",
            "columnName": "version",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "media_store_volume_name"
          ]
        },
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "AddToAlbumEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `album_share_id` TEXT, `album_id` TEXT, `capture_time` INTEGER NOT NULL, `hash` TEXT, `content_hash` TEXT, PRIMARY KEY(`user_id`, `share_id`, `link_id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `album_share_id`, `album_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "albumShareId",
            "columnName": "album_share_id",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "albumId",
            "columnName": "album_id",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "captureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "contentHash",
            "columnName": "content_hash",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "share_id",
            "link_id"
          ]
        },
        "indices": [
          {
            "name": "index_AddToAlbumEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AddToAlbumEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_AddToAlbumEntity_album_id",
            "unique": false,
            "columnNames": [
              "album_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AddToAlbumEntity_album_id` ON `${TABLE_NAME}` (`album_id`)"
          },
          {
            "name": "index_AddToAlbumEntity_user_id_album_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "album_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AddToAlbumEntity_user_id_album_id` ON `${TABLE_NAME}` (`user_id`, `album_id`)"
          },
          {
            "name": "index_AddToAlbumEntity_user_id_album_share_id_album_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "album_share_id",
              "album_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AddToAlbumEntity_user_id_album_share_id_album_id` ON `${TABLE_NAME}` (`user_id`, `album_share_id`, `album_id`)"
          },
          {
            "name": "index_AddToAlbumEntity_user_id_share_id_link_id_album_share_id_album_id",
            "unique": true,
            "columnNames": [
              "user_id",
              "share_id",
              "link_id",
              "album_share_id",
              "album_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_AddToAlbumEntity_user_id_share_id_link_id_album_share_id_album_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `link_id`, `album_share_id`, `album_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "album_share_id",
              "album_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "TagsMigrationFileEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `id` TEXT NOT NULL, `capture_time` INTEGER NOT NULL, `state` TEXT NOT NULL, `uri` TEXT, `mime_type` TEXT, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `id`), FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "captureTime",
            "columnName": "capture_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uriString",
            "columnName": "uri",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mime_type",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_TagsMigrationFileEntity_user_id_volume_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TagsMigrationFileEntity_user_id_volume_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`)"
          },
          {
            "name": "index_TagsMigrationFileEntity_user_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TagsMigrationFileEntity_user_id_share_id` ON `${TABLE_NAME}` (`user_id`, `share_id`)"
          },
          {
            "name": "index_TagsMigrationFileEntity_user_id_share_id_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TagsMigrationFileEntity_user_id_share_id_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `id`)"
          },
          {
            "name": "index_TagsMigrationFileEntity_user_id_volume_id_share_id_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id",
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TagsMigrationFileEntity_user_id_volume_id_share_id_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`, `id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "TagsMigrationFileTagEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `id` TEXT NOT NULL, `tag` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `id`, `tag`), FOREIGN KEY(`user_id`, `volume_id`, `share_id`, `id`) REFERENCES `TagsMigrationFileEntity`(`user_id`, `volume_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "id",
            "tag"
          ]
        },
        "indices": [
          {
            "name": "index_TagsMigrationFileTagEntity_user_id_volume_id_share_id_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id",
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TagsMigrationFileTagEntity_user_id_volume_id_share_id_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`, `id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "TagsMigrationFileEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "volume_id",
              "share_id",
              "id"
            ],
            "referencedColumns": [
              "user_id",
              "volume_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "DriveFeatureFlagRefreshEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `id` TEXT NOT NULL, `last_fetch_timestamp` INTEGER, PRIMARY KEY(`user_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastFetchTimestamp",
            "columnName": "last_fetch_timestamp",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_DriveFeatureFlagRefreshEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DriveFeatureFlagRefreshEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "DeviceEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `id` TEXT NOT NULL, `type` INTEGER NOT NULL, `name` TEXT NOT NULL, `sync_state` INTEGER NOT NULL, `creation_time` INTEGER NOT NULL, `last_modified` INTEGER, `last_synced` INTEGER, PRIMARY KEY(`user_id`, `id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`) REFERENCES `ShareEntity`(`user_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`user_id`, `share_id`, `link_id`) REFERENCES `LinkEntity`(`user_id`, `share_id`, `id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "syncState",
            "columnName": "sync_state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "creationTime",
            "columnName": "creation_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastModified",
            "columnName": "last_modified",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "lastSynced",
            "columnName": "last_synced",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_DeviceEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DeviceEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_DeviceEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DeviceEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_DeviceEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DeviceEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_DeviceEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DeviceEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_DeviceEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DeviceEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_DeviceEntity_user_id_volume_id_share_id_link_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DeviceEntity_user_id_volume_id_share_id_link_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`, `link_id`)"
          },
          {
            "name": "index_DeviceEntity_user_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DeviceEntity_user_id_share_id` ON `${TABLE_NAME}` (`user_id`, `share_id`)"
          },
          {
            "name": "index_DeviceEntity_user_id_share_id_link_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DeviceEntity_user_id_share_id_link_id` ON `${TABLE_NAME}` (`user_id`, `share_id`, `link_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "ShareEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id"
            ],
            "referencedColumns": [
              "user_id",
              "id"
            ]
          },
          {
            "table": "LinkEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id",
              "share_id",
              "link_id"
            ],
            "referencedColumns": [
              "user_id",
              "share_id",
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "UrlLastFetchEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `url` TEXT NOT NULL, `last_fetch_timestamp` INTEGER, PRIMARY KEY(`user_id`, `url`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastFetchTimestamp",
            "columnName": "last_fetch_timestamp",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "url"
          ]
        },
        "indices": [
          {
            "name": "index_UrlLastFetchEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UrlLastFetchEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_UrlLastFetchEntity_url",
            "unique": false,
            "columnNames": [
              "url"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UrlLastFetchEntity_url` ON `${TABLE_NAME}` (`url`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "SharedWithMeListingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, `type` INTEGER, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `link_id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "link_id"
          ]
        },
        "indices": [
          {
            "name": "index_SharedWithMeListingEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SharedWithMeListingEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_SharedWithMeListingEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SharedWithMeListingEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_SharedWithMeListingEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SharedWithMeListingEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_SharedWithMeListingEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SharedWithMeListingEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_SharedWithMeListingEntity_user_id_volume_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SharedWithMeListingEntity_user_id_volume_id_share_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "SharedByMeListingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `volume_id` TEXT NOT NULL, `share_id` TEXT NOT NULL, `link_id` TEXT NOT NULL, PRIMARY KEY(`user_id`, `volume_id`, `share_id`, `link_id`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "volumeId",
            "columnName": "volume_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shareId",
            "columnName": "share_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "volume_id",
            "share_id",
            "link_id"
          ]
        },
        "indices": [
          {
            "name": "index_SharedByMeListingEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SharedByMeListingEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_SharedByMeListingEntity_volume_id",
            "unique": false,
            "columnNames": [
              "volume_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SharedByMeListingEntity_volume_id` ON `${TABLE_NAME}` (`volume_id`)"
          },
          {
            "name": "index_SharedByMeListingEntity_share_id",
            "unique": false,
            "columnNames": [
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SharedByMeListingEntity_share_id` ON `${TABLE_NAME}` (`share_id`)"
          },
          {
            "name": "index_SharedByMeListingEntity_link_id",
            "unique": false,
            "columnNames": [
              "link_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SharedByMeListingEntity_link_id` ON `${TABLE_NAME}` (`link_id`)"
          },
          {
            "name": "index_SharedByMeListingEntity_user_id_volume_id_share_id",
            "unique": false,
            "columnNames": [
              "user_id",
              "volume_id",
              "share_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SharedByMeListingEntity_user_id_volume_id_share_id` ON `${TABLE_NAME}` (`user_id`, `volume_id`, `share_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "SharedRemoteKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `key` TEXT NOT NULL, `anchor_id` TEXT NOT NULL, `has_more` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "anchorId",
            "columnName": "anchor_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hasMore",
            "columnName": "has_more",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "StalePublicAddressKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `email` TEXT NOT NULL, `key` TEXT NOT NULL, PRIMARY KEY(`email`, `key`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`email`, `key`) REFERENCES `PublicAddressKeyDataEntity`(`email`, `publicKey`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "email",
            "key"
          ]
        },
        "indices": [
          {
            "name": "index_StalePublicAddressKeyEntity_email",
            "unique": false,
            "columnNames": [
              "email"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_StalePublicAddressKeyEntity_email` ON `${TABLE_NAME}` (`email`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "PublicAddressKeyDataEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "email",
              "key"
            ],
            "referencedColumns": [
              "email",
              "publicKey"
            ]
          }
        ]
      },
      {
        "tableName": "CounterEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `key` TEXT NOT NULL, `count` INTEGER NOT NULL, `last_modified` INTEGER NOT NULL, PRIMARY KEY(`user_id`, `key`), FOREIGN KEY(`user_id`) REFERENCES `AccountEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "count",
            "columnName": "count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastModified",
            "columnName": "last_modified",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id",
            "key"
          ]
        },
        "indices": [
          {
            "name": "index_CounterEntity_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CounterEntity_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_CounterEntity_key",
            "unique": false,
            "columnNames": [
              "key"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CounterEntity_key` ON `${TABLE_NAME}` (`key`)"
          },
          {
            "name": "index_CounterEntity_last_modified",
            "unique": false,
            "columnNames": [
              "last_modified"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CounterEntity_last_modified` ON `${TABLE_NAME}` (`last_modified`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'aac5dca942f659a7caf84b5307813415')"
    ]
  }
}