default:
  image: harbor.protontech.ch/android-shared/docker-android/oci:v2.1.1
  tags:
    - shared-small

variables:
  # Use fastzip to improve cache times
  #FF_USE_FASTZIP: "true"
  # Use no compression for artifacts
  ARTIFACT_COMPRESSION_LEVEL: "fastest"
  ATLAS_DEPLOY_ENV: "true"
  IMAGES: $IMAGES
  PUBLISH_APK_NAME: "ProtonDrive-Android.apk"

workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

before_script:
  # We must keep these variables here. We can't do it inside the entrypoint, as idk how but
  # gitlab is going to convert them as a variable content instead of a variable file...
  - if [[ -f /load-env.sh ]]; then source /load-env.sh; fi
  - base64 -d - < "$PROTON_KEYSTORE_FILE" > app/protonkey.jks
  - base64 -d - < "$SERVICE_ACCOUNT_FILE" > app/service_account.json
  - md5sum app/protonkey.jks
  - md5sum app/service_account.json
  - git fetch --tags
  - if [[ $CI_COMMIT_REF_NAME == "candidate" ]]; then git fetch --unshallow origin HEAD; fi

stages:
  - screenshots
  - i18n
  - prepare
  - analyze
  - deploy
  - build
  - startReview
  - test
  - report
  - publish
  - cleanup

screenshots:generate:
  stage: screenshots
  # We need to mark it as failable in order not to prevent the pipeline from launching
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" # Do not execute if the pipeline is a manual one
      when: never
    - if: $CI_PIPELINE_SOURCE == "schedule" # Do not execute if the pipeline is a scheduled one
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # Do not run if it's a merge to the default branch, screenshots should already have been generated
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run manual if it's a MR
      when: manual
  tags:
    - xlarge-k8s
  script:
    - screenshot-tests/ci-scripts/generateScreenshotsIfNeeded.sh

prepare-build:
  stage: prepare
  artifacts:
    paths:
      - deploy.env
      - private.properties
    reports:
      dotenv: deploy.env
    expire_in: 1 week
  cache: []
  tags:
    - shared-small
  script:
    - echo PROXY_TOKEN="$(curl -o - https://proxy.proton.black/token/get)" >> deploy.env
    - if [[ $DYNAMIC_DOMAIN != '' ]]; then echo DYNAMIC_DOMAIN="$DYNAMIC_DOMAIN" >> deploy.env; fi
    - echo "$PROTON_KEYSTORE_PRIVATE_PROPERTIES" >> private.properties

prepare-gradle-build-scan:
  stage: prepare
  tags:
    - shared-large
  script:
    - echo "BUILD_SCAN_PUBLISH=true" >> build_scan.env
  artifacts:
    reports:
      dotenv: build_scan.env
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^build/
    - if: $CI_COMMIT_REF_NAME =~ /^ci/
  cache: []

detekt analysis:
  stage: analyze
  tags:
    - shared-large
  script:
    - ./gradlew multiModuleDetekt --configuration-cache-problems=warn
  allow_failure: true
  artifacts:
    expire_in: 1 week
    reports:
      codequality: config/detekt/reports/mergedReport.json
  needs: []

.build:
  stage: build
  needs:
    - job: "prepare-build"
    - job: "prepare-gradle-build-scan"
      optional: true
  tags:
    - xlarge-k8s
  artifacts:
    expire_in: 1 week

build:dev:debug:
  extends: [.build]
  script:
    - ./gradlew assembleDevDebug --max-workers=4
    - ./gradlew assembleDevDebugAndroidTest --max-workers=4
    - |
      ./gradlew \
        :drive:crypto-base:domain:assembleDebugAndroidTest \
        :drive:files-list:assembleDebugAndroidTest \
        :drive:link:data:assembleDebugAndroidTest \
        :drive:sorting:presentation:assembleDebugAndroidTest
  artifacts:
    paths:
      - app/build/variables.env
      - ./**/*.apk
    reports:
      dotenv: app/build/variables.env

build payments black bundle:
  extends: [.build]
  when: manual
  script:
    - ./gradlew assembleDevRelease
    - ./gradlew bundleDevRelease
  variables:
    TEST_ENV_DOMAIN: "payments.proton.black"
  artifacts:
    paths:
      - app/build/outputs/apk/dev/release
      - app/build/outputs/bundle/devRelease
      - app/build/outputs/mapping/devRelease

build alpha release:
  extends: [.build]
  script:
    - ./gradlew assembleAlphaRelease
  when: manual
  artifacts:
    paths:
      - app/build/outputs/apk/alpha/release
      - app/build/outputs/mapping/alphaRelease

build beta release:
  extends: [.build]
  script:
    - ./gradlew assembleBetaRelease
  when: manual
  artifacts:
    paths:
      - app/build/outputs/apk/beta/release
      - app/build/outputs/mapping/betaRelease

build prod release:
  extends: [.build]
  script:
    - ./gradlew assembleProdRelease
  when: manual
  artifacts:
    expire_in: 4 weeks
    paths:
      - app/build/outputs/apk/prod/release
      - app/build/outputs/mapping/prodRelease

dev debug unit test:
  stage: test
  needs:
    - job: "build:dev:debug"
    - job: "prepare-gradle-build-scan"
      optional: true
  tags:
    - xlarge-k8s
  script:
    - ./gradlew testDevDebugUnitTest testDebugUnitTest -x :screenshot-tests:presentation:testDebugUnitTest
  artifacts:
    expire_in: 1 week
    reports:
      junit: ./**/build/test-results/test*DebugUnitTest/TEST-*.xml

dev debug screenshot tests:
  stage: test
  needs:
    - job: "build:dev:debug"
  tags:
    - xlarge-k8s
  script:
    - ./gradlew screenshot-tests:presentation:verifyPaparazziDebug
  artifacts:
    expire_in: 1 week
    reports:
      junit: ./**/build/test-results/test*DebugUnitTest/TEST-*.xml

upload to firebase:
  stage: startReview
  tags:
    - shared-medium
  script:
    - export $(cat app/build/variables.env)
    - gcloud config set project $CLOUD_PROJECT_ID --quiet
    - gcloud auth activate-service-account --key-file app/service_account.json --quiet
    - gsutil cp $LOCAL_APK $REMOTE_APK
    - gsutil cp $LOCAL_TEST_APK $REMOTE_TEST_APK
  cache: []

# Integration tests
.tests_preparation_script:
  image: $CI_REGISTRY/tpe/test-scripts
  stage: test
  tags:
    - shared-medium
  variables:
    RESULTS_DIR: "${FIREBASE_RESULT_ROOT}/${CI_JOB_NAME}"
    FIREBASE_LOG_FILE: "${CI_JOB_NAME}.firebase_log"
    DEVICE_CONFIG: "quickTest"
  script:
    - echo ${ENV_VARIABLES}
    - echo ${DEVICE_CONFIG}
    - gcloud config set project $CLOUD_PROJECT_ID --quiet
    - gcloud auth activate-service-account --key-file app/service_account.json --quiet
    - gcloud firebase test android run firebase-device-config.yml:${DEVICE_CONFIG}
      --timeout 60m
      --app $REMOTE_APK
      --test $TEST_APP
      --num-flaky-test-attempts=1
      --environment-variables "${ENV_VARIABLES}"
      --directories-to-pull /sdcard/Download,/sdcard/Pictures/Screenshots
      --results-dir="${RESULTS_DIR}"
      --test-targets="${TEST_TARGETS}"
      --test-runner-class="${TEST_RUNNER_CLASS}"
      --use-orchestrator 2>&1 | tee $FIREBASE_LOG_FILE
  after_script:
    # Prepare and pull artifacts
    - mkdir firebase_artifacts
    - gsutil ls $GCLOUD_BUCKET_URL/$RESULTS_DIR | grep '/$' | gsutil -m cp -r -I ./firebase_artifacts
    - echo "" >> $FIREBASE_LOG_FILE
    - echo GITLAB_JOB_URL=$CI_JOB_URL >> $FIREBASE_LOG_FILE
    - echo GITLAB_JOB_NAME=$CI_JOB_NAME >> $FIREBASE_LOG_FILE
    # Attach screenshots and improve readability for Gitlab test report
    - process_firebase_report.py
      --path firebase_artifacts
      --screenshots artifacts/sdcard/Pictures/Screenshots
      --remove-prefix me.proton.
    # Merge reports from multiple firebase devices into one
    - merge_reports.py
      --path firebase_artifacts
      --output ${CI_JOB_NAME}_report.xml
  artifacts:
    expire_in: 1 week
    paths:
      - ./**/${CI_JOB_NAME}-${CI_COMMIT_SHORT_SHA}.ec
      - firebase_artifacts
      - ./${CI_JOB_NAME}.firebase_log
      - firebase_output.txt
      - ${CI_JOB_NAME}_report.xml
    reports:
      junit: ${CI_JOB_NAME}_report.xml
    when: always
  cache: []

.drive-module-tests:
  extends: .tests_preparation_script
  variables:
    TEST_PACKAGE: ${PACKAGE_NAME//-/.}
    TEST_APP: "drive/${PACKAGE_NAME}/build/outputs/apk/androidTest/debug/*.apk"
    TEST_TARGETS: "package me.proton.core.drive.$TEST_PACKAGE"
    TEST_RUNNER_CLASS: "androidx.test.runner.AndroidJUnitRunner"
    ENV_VARIABLES: 'coverage=true,coverageFile="/sdcard/Download/${CI_JOB_NAME}-${CI_COMMIT_SHORT_SHA}.ec",clearPackageData=true'

drive-crypto-base-domain-firebase-tests:
  extends: .drive-module-tests
  variables:
    PACKAGE_NAME: "crypto-base/domain"
    TEST_PACKAGE: "cryptobase.domain"

drive-files-list-firebase-tests:
  extends: .drive-module-tests
  variables:
    PACKAGE_NAME: "files-list"
    TEST_PACKAGE: "files"

drive-link-data-firebase-tests:
  extends: .drive-module-tests
  variables:
    PACKAGE_NAME: "link/data"
    TEST_PACKAGE: "link.data"

drive-sorting-presentation-firebase-tests:
  extends: .drive-module-tests
  variables:
    PACKAGE_NAME: "sorting/presentation"

.app-firebase-tests:
  extends: .tests_preparation_script
  timeout: 4h
  variables:
    TEST_APP: "$REMOTE_TEST_APK"
    TEST_RUNNER_CLASS: "me.proton.android.drive.ui.HiltTestRunner"
    ENV_VARIABLES: "host=${DYNAMIC_DOMAIN},proxyToken=${PROXY_TOKEN},clearPackageData=true,debug=false"
  allow_failure: true
  rules:
    - if: $CI_DEVICE_CONFIG != null
      variables:
        DEVICE_CONFIG: $CI_DEVICE_CONFIG
    - if: $DYNAMIC_DOMAIN != null
      when: manual
      # disable E2E test on default branch to avoid large expense on firebase
    #- if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_PIPELINE_SOURCE == "schedule"
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:all/'

test:firebase:app-ui:
  extends: .app-firebase-tests
  rules:
    - when: on_success
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.dialog, package me.proton.android.drive.ui.navigation"


test:firebase:app-background:
  extends: .app-firebase-tests
  rules:
    - when: on_success
  variables:
    TEST_TARGETS: "package me.proton.android.drive.background"

test:firebase:e2e:smoke:
  extends: .app-firebase-tests
  when: manual
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
      when: never
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:all/'
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success
  variables:
    TEST_TARGETS: "annotation me.proton.android.drive.ui.annotation.SmokeTest"

test:firebase:e2e:account:
  extends: .app-firebase-tests
  resource_group: "shard-5-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:account/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.account"
    SCOPE: "account"

test:firebase:e2e:computers:
  extends: .app-firebase-tests
  resource_group: "shard-2-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:computers/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.computers"

test:firebase:e2e:creatingFolder:
  extends: .app-firebase-tests
  resource_group: "shard-1-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:creatingFolder/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.creatingFolder"

test:firebase:e2e:deeplink:
  extends: .app-firebase-tests
  resource_group: "shard-1-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:deeplink/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.deeplink"

test:firebase:e2e:details:
  extends: .app-firebase-tests
  resource_group: "shard-1-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:details/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.details"

test:firebase:e2e:document:
  extends: .app-firebase-tests
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:document/'
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.document"

test:firebase:e2e:move:
  extends: .app-firebase-tests
  resource_group: "shard-3-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:move/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.move"
    DEVICE_CONFIG: "quickTest-2"

test:firebase:e2e:offline:
  extends: .app-firebase-tests
  resource_group: "shard-2-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:offline/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.offline"

test:firebase:e2e:photos:
  extends: .app-firebase-tests
  resource_group: "shard-3-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:photos/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.photos"

test:firebase:e2e:preview:
  extends: .app-firebase-tests
  resource_group: "shard-1-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:preview/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.preview"

test:firebase:e2e:rename:
  extends: .app-firebase-tests
  resource_group: "shard-2-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:rename/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.rename"

test:firebase:e2e:settings:
  extends: .app-firebase-tests
  resource_group: "shard-1-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:settings/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.settings"
    DEVICE_CONFIG: "quickTest-3"

test:firebase:e2e:share-link:
  extends: .app-firebase-tests
  resource_group: "shard-4-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:share-link/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.share.link"
    DEVICE_CONFIG: "quickTest-2"

test:firebase:e2e:share-list:
  extends: .app-firebase-tests
  resource_group: "shard-4-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:share-list/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.share.list"
    DEVICE_CONFIG: "quickTest-2"

test:firebase:e2e:share-user:
  extends: .app-firebase-tests
  resource_group: "shard-4-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:share-user/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.share.user"
    DEVICE_CONFIG: "quickTest-2"

test:firebase:e2e:subscription:
  extends: .app-firebase-tests
  resource_group: "shard-1-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:subscription/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.subscription"

test:firebase:e2e:trash:
  extends: .app-firebase-tests
  resource_group: "shard-1-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:trash/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.trash"

test:firebase:e2e:upload:
  extends: .app-firebase-tests
  resource_group: "shard-3-$CI_COMMIT_SHORT_SHA"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:upload/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.upload"

test:firebase:e2e:onboarding:
  extends: .app-firebase-tests
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /scope:onboarding/'
    - !reference [.app-firebase-tests, rules]
  variables:
    TEST_TARGETS: "package me.proton.android.drive.ui.test.flow.onboarding"

coverage report:
  stage: report
  tags:
    - xlarge-k8s
  script:
    - ./gradlew coberturaCoverageReport
  allow_failure: true
  coverage: '/Total coverage: \d+.\d+/'
  artifacts:
    expire_in: 1 week
    paths:
      - ./**/build/reports/*
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ./**/build/reports/cobertura-coverage.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual

testmo-upload:
  stage: report
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
  before_script:
    - if [[ -f /load-env.sh ]]; then source /load-env.sh; fi
  variables:
    PROJECT_ID: "25"
    NAME: $CI_COMMIT_TITLE
    MILESTONE: $ARCHIVES_VERSION
    TAGS: $CI_PIPELINE_SOURCE
    SOURCE: $CI_COMMIT_REF_SLUG
    RESULT_FOLDER: "./*.xml"
  cache: []

report:slack:
  image: $CI_REGISTRY/tpe/test-scripts
  stage: report
  when: always
  allow_failure: true
  tags:
    - shared-small
  script:
    - firebase_reporter.py
      --path .
      --slack-channel drive-android-ci-reports
  cache: []

publish to firebase app distribution:
  stage: publish
  tags:
    - xlarge-k8s
  script:
    - export $(cat deploy.env)
    - ./gradlew :app:publishGeneratedReleaseNotes --configuration-cache-problems=warn
    - wget --quiet --output-document=/tmp/firebase https://firebase.tools/bin/linux/latest
    - mkdir -p /opt/firebase-cli/
    - cp /tmp/firebase /opt/firebase-cli/firebase
    - chmod +x /opt/firebase-cli/firebase
    - /opt/firebase-cli/firebase appdistribution:distribute $LOCAL_APK
      --app 1:141471569432:android:1ba11f1b1e26e08ab7956d
      --release-notes-file "app/src/main/play/release-notes/en-US/default.txt"
      --groups "qa-team, dev-team, management-team"
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      allow_failure: true

distribute:debug:mr:
  stage: publish
  image: $CI_REGISTRY/tpe/test-scripts
  needs:
    - job: "build:dev:debug"
      artifacts: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      allow_failure: true
  script:
    - /usr/local/bin/nexus/mr_created_commit_pushed.py
      --token "$DRIVE_ANDROID_READ_ACCESS_TOKEN"
      --component "/Drive/Android"
      --file_paths "$LOCAL_APK" "$LOCAL_TEST_APK"
      --file_names "drive-dev-debug.apk" "drive-dev-debug-test.apk"

distribute:debug:post-merge:
  stage: publish
  image: $CI_REGISTRY/tpe/test-scripts
  needs:
    - job: "build:dev:debug"
      artifacts: true
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      allow_failure: true
  script:
    - /usr/local/bin/nexus/mr_merged_with_post_merge_pipeline.py
      --token "$DRIVE_ANDROID_READ_ACCESS_TOKEN"
      --component "/Drive/Android"
      --file_paths "$LOCAL_APK" "$LOCAL_TEST_APK"
      --file_names "drive-dev-debug.apk" "drive-dev-debug-test.apk"


# New job
publish:protonapps:s3:
  extends:
    - artifactlift-s3-upload-prod
  variables:
    FF_KUBERNETES_HONOR_ENTRYPOINT: "false"
  stage: publish
  allow_failure: true
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
      when: manual
  needs:
    - job: "build prod release"
      artifacts: true
  before_script:
    - mkdir -p s3-out/
    - mv app/build/outputs/apk/prod/release/*.apk "s3-out/${PUBLISH_APK_NAME}"

startReview:
  needs:
    - job: "prepare-build"
    - job: "build:dev:debug"
  tags:
    - shared-medium
  before_script:
    - if [[ -f /load-env.sh ]]; then source /load-env.sh; fi
    - export REVIEW_APP_ARTIFACT_PATH=$LOCAL_APK
    - echo ${REVIEW_APP_ARTIFACT_PATH}
  extends: .startReview
  cache: []

stopReview:
  stage: cleanup
  needs:
    - job: "startReview"
  before_script: []
  extends: .stopReview
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true

include:
  - project: 'proton/mobile/android/proton-libs'
    ref: main
    file: '/ci/templates-shared/appetize-integration.yml'

  - project: 'tpe/testmo-reporter'
    ref: master
    file: '/scenarios/testmo-simple.yml'

  - project: 'translations/generator'
    ref: master
    file: '/jobs/sync-crowdin.gitlab-ci.yml'

  - project: 'translations/generator'
    ref: master
    file: '/jobs/commit-locales.gitlab-ci.yml'

  - component: gitlab.protontech.ch/proton/devops/cicd-components/kubernetes/atlas-deploy/pipenv@0.5.0
    inputs:
      cleanup-stage: cleanup
      key: env-pipenv-$CI_PROJECT_ID-$CI_PIPELINE_ID
      features: $FEATURES
    rules:
      - if: $DYNAMIC_DOMAIN != null
        when: never
      - if: $CI_PIPELINE_SOURCE == "merge_request_event" && '$CI_MERGE_REQUEST_LABELS =~ /scope:.*/'
        when: never
      - if: $CI_PIPELINE_SOURCE == "merge_request_event" ||  $CI_PIPELINE_SOURCE == "web" ||  $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
        when: always
      - when: never

  - component: gitlab.protontech.ch/proton/devops/cicd-components/kubernetes/atlas-deploy/pipenv@0.5.0
    inputs:
      cleanup-stage: cleanup
      key: mr-env-pipenv-$CI_PROJECT_ID-$CI_PIPELINE_ID
      features: "high-availability"
      suffix: ":mr"
    rules:
      - if: $CI_PIPELINE_SOURCE == "merge_request_event" && '$CI_MERGE_REQUEST_LABELS =~ /scope:.*/'
        when: always
      - when: never

  - component: gitlab.protontech.ch/proton/devops/cicd-components/kubernetes/atlas-deploy/pipenv@0.7.0
    inputs:
      cleanup-stage: cleanup
      deploy: manual
      cleanup: manual
      images: $IMAGES
      key: custom-env-pipenv-$CI_PROJECT_ID-$CI_PIPELINE_ID
      suffix: ":custom"
    rules:
      - if: $DYNAMIC_DOMAIN != null
        when: never
      - if: $CI_PIPELINE_SOURCE == "merge_request_event"
        when: always
      - when: never
  # Component to upload the artifacts to S3
  - component: gitlab.protontech.ch/proton/devops/cicd-components/tools/artifactlift/s3-upload@0.1.20
    inputs:
      stage: publish
      destination-directory: android
      destination-repository: drive-releases
      destination-cluster: prod
      artifact-list: "s3-out/${PUBLISH_APK_NAME}"

# Disable the default S3 jobs
artifactlift-s3-upload-prod:
  rules:
    - when: never

i18n-sync-crowdin:
  stage: i18n
  variables:
    I18N_SYNC_BRANCH: develop
    I18N_SYNC_CROWDIN_PROJECT: 'android-drive'
  extends: .i18n-sync-crowdin-shared

i18n-commit-locales:
  stage: i18n
  variables:
    I18N_COMMIT_CROWDIN_PROJECT: 'android-drive'
  extends: .i18n-commit-locales-shared
